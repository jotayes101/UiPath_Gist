{
    "swagger": "2.0",
    "info": {
        "description": "Denodo Scheduler REST API",
        "version": "8.0.4",
        "title": "Denodo Scheduler",
        "termsOfService": "https://www.denodo.com/en/terms-of-use",
        "contact": {
            "name": "Denodo Technologies",
            "url": "https://www.denodo.com",
            "email": "info@denodo.com"
        },
        "license": {
            "name": "All rights reserved"
        }
    },
    "host": "denodosm.red.ecopetrol.com.co:19443",
    "tags": [
        {
            "name": "configuration",
            "description": "Configuration management.\r\nAffects several aspects of the server, such as: server ports, database settings, clustering, mail settings, etc."
        },
        {
            "name": "connection",
            "description": "Server Controller"
        },
        {
            "name": "datasources",
            "description": "Data Sources management: CRUD operations."
        },
        {
            "name": "drivers",
            "description": "Drivers management: CRUD operations."
        },
        {
            "name": "importexport",
            "description": "Import and Export current server metadata and configuration, with the allowed options to include or not the plugins, drivers, etc."
        },
        {
            "name": "introspection",
            "description": "Introspection actions (get views, fields,...) against a VDP server."
        },
        {
            "name": "jobs",
            "description": "Jobs management: CRUD operations.\r\nJob status management: start / stop / resume / enable / disable."
        },
        {
            "name": "metaconfig",
            "description": "API to query the server for the metaconfig, defaultConfig and different subtypes of an element: data sources, jobs, handlers, exporters and triggers. The elementType-elementSubType hierarchy is:\r\n - \"dataSource\"\r\n   - \"Scheduler-Index\"\r\n   - \"CSV\"\r\n   - \"Elasticsearch\"\r\n   - \"JDBC\"\r\n   - \"VDP\"\r\n - \"job\"\r\n   - \"VDP\"\r\n   - \"VDPCache\"\r\n   - \"VDPIndexer\"\r\n - \"handler\"\r\n - \"exporter\"\r\n   - \"Scheduler-Index\"\r\n   - \"CSV\"\r\n   - \"Elasticsearch\"\r\n   - \"JDBC\"\r\n - \"trigger\""
        },
        {
            "name": "ping-controller",
            "description": "Ping Controller"
        },
        {
            "name": "plugins",
            "description": "Plugins management: CRUD operations."
        },
        {
            "name": "projects",
            "description": "Projects management: CRUD operations.\r\nWhen retrieving a project, the API allows the clients to also retrieve its data sources and/or jobs, by specifying it in the “expand” parameter (eg: /api/projects/20?expand=dataSource,job)."
        },
        {
            "name": "reports",
            "description": "Reports management."
        },
        {
            "name": "roles",
            "description": "Roles and Permissions management: import roles from VDP and assign/delete permissions to them."
        },
        {
            "name": "tool-configuration-controller",
            "description": "Tool Configuration Controller"
        },
        {
            "name": "user",
            "description": "User Controller"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/webadmin/denodo-scheduler-admin/Ping": {
            "get": {
                "tags": [
                    "ping-controller"
                ],
                "summary": "Returns \"200 OK\" if the API REST is running",
                "operationId": "pingUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/changePassword": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Changes local login password. Accepts two query strings \"oldPassword\" and \"newPassword\"",
                "operationId": "changePasswordUsingPOST",
                "parameters": [
                    {
                        "name": "newPassword",
                        "in": "query",
                        "description": "newPassword",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "oldPassword",
                        "in": "query",
                        "description": "oldPassword",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Retrieves the Scheduler configuration (server ports, server, mail, etc)",
                "operationId": "getConfigurationUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AllConfigurationRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "configuration"
                ],
                "summary": "Changes the Scheduler configuration (server ports, server, mail, etc)",
                "operationId": "changeConfigurationUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "configuration",
                        "description": "configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AllConfigurationReq"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AllConfigurationRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/cluster": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Retrieves the cluster settings",
                "operationId": "getClusterConfigUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterConfiguration"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "configuration"
                ],
                "summary": "Updates the cluster settings",
                "operationId": "changeClusterConfigUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "clusterConfig",
                        "description": "clusterConfig",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterConfiguration"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterConfiguration"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/database": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Retrieves the settings for the metadata database",
                "operationId": "getDatabaseConfigUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseConfigurationRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "configuration"
                ],
                "summary": "Updates the settings for the metadata database. Does not allow to upload keytab file",
                "operationId": "changeDatabaseConfigUsingPUT",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dbConfig",
                        "description": "dbConfig",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatabaseConfigurationReq"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/databaseAndKeytab": {
            "put": {
                "tags": [
                    "configuration"
                ],
                "summary": "Updates the settings for the metadata database. Allows to upload keytab file",
                "operationId": "changeDatabaseKerberosConfigUsingPUT",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "keyTabFile",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/elasticAnalyzers": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Gets the list of analyzers to use in Elastic exporter",
                "operationId": "getElasticSearchAnalyzersUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/i18n": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Gets the list of i18n (to shown in CSV exporter, for instance)",
                "operationId": "getI18nsUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/kerberos": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Retrieves the settings for Kerberos auth",
                "operationId": "getKerberosSettingsUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/KerberosConfiguration"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "configuration"
                ],
                "summary": "Updates the settings for Kerberos auth",
                "operationId": "changeKerberosSettingsUsingPUT",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "configFile",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "keyTabFile",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/KerberosConfiguration"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/kerberos/spn": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Retrieves the SPN",
                "operationId": "getKerberosPrincipalUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/mail": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Retrieves the mail configuration in the Scheduler server",
                "operationId": "getMailConfigurationUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MailConfigurationRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "configuration"
                ],
                "summary": "Updates the mail configuration in the Scheduler server",
                "operationId": "updateMailConfigurationUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "mailConfig",
                        "description": "mailConfig",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MailConfigurationReq"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MailConfigurationRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/mail/test": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Tests the current mail configuration",
                "operationId": "testMailConfigurationUsingGET",
                "parameters": [
                    {
                        "name": "recipients",
                        "in": "query",
                        "description": "recipients",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/ports": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Retrieves the Scheduler server ports",
                "operationId": "getServerPortsUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServerPortsConfiguration"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "configuration"
                ],
                "summary": "Changes the Scheduler server ports",
                "operationId": "changeServerPortsUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ports",
                        "description": "ports",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServerPortsConfiguration"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServerPortsConfiguration"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/schedulerMode": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "schedulerMode",
                "operationId": "schedulerModeUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SchedulerMode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/server": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Retrieves the Scheduler server settings",
                "operationId": "getServerSettingsUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServerConfiguration"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "configuration"
                ],
                "summary": "Changes the Scheduler server settings",
                "operationId": "changeServerSettingsUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "settings",
                        "description": "settings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServerConfiguration"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServerConfiguration"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/configuration/vdpDataSource": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Gets the config of the VDP datasource used to login",
                "operationId": "getVDPDataSourceSettingsUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VDPDataSourceConfiguration"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "configuration"
                ],
                "summary": "Updates the config of the VDP datasource used to login",
                "operationId": "changeVDPDataSourceSettingsUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "settings",
                        "description": "settings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VDPDataSourceConfiguration"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VDPDataSourceConfiguration"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/dataSources": {
            "get": {
                "tags": [
                    "datasources"
                ],
                "summary": "Retrieves all the data sources (from every project)",
                "operationId": "getAllDataSourcesUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataSourceRes"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/drivers": {
            "get": {
                "tags": [
                    "drivers"
                ],
                "summary": "Obtains the collection of drivers registered in the Scheduler",
                "operationId": "getDriversUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DriverInfoRes"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "drivers"
                ],
                "summary": "Adds a new driver to the Scheduler. Accepts two body parts in a multipart request: a \"DriverInfo\" and the driver content",
                "operationId": "createDriverUsingPOST",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "files",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DriverInfoRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/drivers/{driverID}": {
            "get": {
                "tags": [
                    "drivers"
                ],
                "summary": "Obtains the driver registered in the Scheduler",
                "operationId": "getDriverUsingGET",
                "parameters": [
                    {
                        "name": "driverID",
                        "in": "path",
                        "description": "driverID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DriverInfoRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "drivers"
                ],
                "summary": "Deletes the driver from the Scheduler",
                "operationId": "deleteDriverUsingDELETE",
                "parameters": [
                    {
                        "name": "driverID",
                        "in": "path",
                        "description": "driverID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/jobs": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "summary": "Retrieves all the jobs (from every project)",
                "operationId": "getAllJobsUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JobRes"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/jobs/dependents": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "summary": "Obtains the collection of job identifiers that have dependencies with the specified jobs. Accepts a query string \"jobIDs\" as a comma-separated list of job IDs",
                "operationId": "getJobsDependentsUsingGET",
                "parameters": [
                    {
                        "name": "jobIDs",
                        "in": "query",
                        "description": "jobIDs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/JobInformation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/jobs/status": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "summary": "Gets the status of all the jobs (or of the specified ones). Accepts a query string \"jobIDs\"",
                "operationId": "getJobStatusUsingGET_1",
                "parameters": [
                    {
                        "name": "jobIDs",
                        "in": "query",
                        "description": "jobIDs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JobStatusInformation"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/jobs/{jobID}/lastExecutionDate": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "summary": "Gets last successful execution date",
                "operationId": "lastSuccessfulExecutionUsingGET",
                "parameters": [
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/me": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Retrieves the authentication information \"LoginSuccessDto\"",
                "operationId": "meUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LoginSuccessDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/meta/defaultConfig/{elementType}/{elementSubType}": {
            "get": {
                "tags": [
                    "metaconfig"
                ],
                "summary": "Gets the default configuration for the element of the specified type (used when creating new elements, to show its default values)",
                "operationId": "getDefaultElementUsingGET",
                "parameters": [
                    {
                        "name": "elementSubType",
                        "in": "path",
                        "description": "elementSubType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "elementType",
                        "in": "path",
                        "description": "elementType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IMetadata"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/meta/metaConfig/{elementType}": {
            "get": {
                "tags": [
                    "metaconfig"
                ],
                "summary": "Gets the metaconfiguration for all types of element",
                "operationId": "getAllMetaConfigsUsingGET",
                "parameters": [
                    {
                        "name": "elementType",
                        "in": "path",
                        "description": "elementType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MetaConfig"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/meta/metaConfig/{elementType}/{elementSubType}": {
            "get": {
                "tags": [
                    "metaconfig"
                ],
                "summary": "Gets the metaconfiguration for the specified type element",
                "operationId": "getMetaConfigUsingGET",
                "parameters": [
                    {
                        "name": "elementSubType",
                        "in": "path",
                        "description": "elementSubType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "elementType",
                        "in": "path",
                        "description": "elementType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MetaConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/meta/subTypes/{elementType}": {
            "get": {
                "tags": [
                    "metaconfig"
                ],
                "summary": "Gets all the possible types for the element. Accepts a query string \"jobType\"",
                "operationId": "getElementSubTypesAllowedInJobUsingGET",
                "parameters": [
                    {
                        "name": "elementType",
                        "in": "path",
                        "description": "elementType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "jobType",
                        "in": "query",
                        "description": "jobType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/plugins": {
            "get": {
                "tags": [
                    "plugins"
                ],
                "summary": "Obtains the collection of plugins (custom element implementation) registered in Scheduler",
                "operationId": "getPluginsUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluginInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "plugins"
                ],
                "summary": "Adds a new plugin to Scheduler. Accepts a body part in a multipart request: the plugin file",
                "operationId": "createPluginUsingPOST",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PluginInfo"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/plugins/{pluginName}": {
            "delete": {
                "tags": [
                    "plugins"
                ],
                "summary": "Deletes the plugin from Scheduler",
                "operationId": "deletePluginUsingDELETE",
                "parameters": [
                    {
                        "name": "pluginName",
                        "in": "path",
                        "description": "pluginName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "Retrieves all projects. Can be filtered by name and the datasources and jobs can be expanded. Accepts two query strings: \"name\" for filtering project and \"expand\" for expanding datasources and/or jobs by denoting them as a comma separeted list like \"job,dataSource\"",
                "operationId": "getProjectsExpandingUsingGET",
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "expand",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "projects"
                ],
                "summary": "Creates a project and sets the header location to the URI of the new created project. Accepts \"ProjectDetails\" body",
                "operationId": "createProjectUsingPOST",
                "parameters": [
                    {
                        "in": "body",
                        "name": "projectDetails",
                        "description": "projectDetails",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectDetails"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "projects"
                ],
                "summary": "Deletes several projects at once. Expects a JSON body: {\"IDs\":\"<comma separated list of project ids>\"}",
                "operationId": "deleteProjectsUsingDELETE",
                "parameters": [
                    {
                        "in": "body",
                        "name": "projects",
                        "description": "projects",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/jobs/sourceParametrizedKeyList": {
            "post": {
                "tags": [
                    "jobs"
                ],
                "summary": "Retrieves the variables of a parametrized query. Expects a JSON body: {\"parametrizedQuery\":\"<query>\"}",
                "operationId": "parseSourceParametrizedKeyListUsingPOST",
                "parameters": [
                    {
                        "in": "body",
                        "name": "query",
                        "description": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/jobs/validateCronExpressions": {
            "post": {
                "tags": [
                    "jobs"
                ],
                "summary": "Validates a cron expression",
                "operationId": "validateCronExpressionsUsingPOST",
                "parameters": [
                    {
                        "in": "body",
                        "name": "cronExpressions",
                        "description": "cronExpressions",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "Retrieves the project by its ID. The datasources and jobs can be expanded. Accepts a query strings \"expand\" for expanding datasources and/or jobs by denoting them as a comma separeted list like \"job,dataSource\"",
                "operationId": "getProjectExpandingUsingGET",
                "parameters": [
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "expand",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "projects"
                ],
                "summary": "Updates a project. Accepts \"ProjectDetails\" body",
                "operationId": "updateProjectUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "projectDetails",
                        "description": "projectDetails",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProjectDetails"
                        }
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "projects"
                ],
                "summary": "Deletes a project",
                "operationId": "deleteProjectUsingDELETE",
                "parameters": [
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/csvDataSources": {
            "post": {
                "tags": [
                    "datasources"
                ],
                "summary": "Creates and uploads a CSV data source in the specified project. \"projectId\" and \"projectName\" should not be included in the json of the body. Accepts a \"CSVDataSource\" body",
                "operationId": "createCSVDataSourceUsingPOST",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "fileContents",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataSourceRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "datasources"
                ],
                "summary": "Updates and uploads the specified CSV data source. It is not necessary to pass the \"projectID\" in the body. Accepts a CSVDataSource body",
                "operationId": "updateCSVDataSourceUsingPUT",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "fileContents",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataSourceRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/csvDataSources/{dataSourceID}": {
            "put": {
                "tags": [
                    "datasources"
                ],
                "summary": "Updates and uploads the specified CSV data source. It is not necessary to pass the \"projectID\" nor \"id\" in the body. Accepts a CSVDataSource body",
                "operationId": "updateCSVDataSourceUsingPUT_1",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "fileContents",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "dataSourceID",
                        "in": "path",
                        "description": "dataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataSourceRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/dataSources": {
            "get": {
                "tags": [
                    "datasources"
                ],
                "summary": "Retrieves all the data sources from the project. Can be filtered by type. Accepts a query string \"type\": Scheduler-Index, CSV, Elasticsearch, ElasticsearchRest, JDBC or VDP",
                "operationId": "getDataSourcesFromProjectUsingGET",
                "parameters": [
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataSourceRes"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "datasources"
                ],
                "summary": "Creates the data source in the specified project. \"projectId\" and \"projectName\" should not be included in the json of the body. Accepts \"ARNIndexDataSource\", \"CSVDataSource\", \"ElasticsearchRestDatasource\", \"JDBCDataSource\" or \"VDPDataSource\" bodies",
                "operationId": "createDataSourceUsingPOST",
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataSource",
                        "description": "dataSource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataSourceReq"
                        }
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataSourceRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "datasources"
                ],
                "summary": "Updates the specified data source. It is not necessary to pass the \"projectID\" in the body. Accepts \"ARNIndexDataSource\", \"CSVDataSource\", \"ElasticsearchRestDatasource\", \"JDBCDataSource\" or \"VDPDataSource\" bodies",
                "operationId": "updateDataSourceUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataSource",
                        "description": "dataSource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataSourceReq"
                        }
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataSourceRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "datasources"
                ],
                "summary": "Deletes several data sources at once. Expects a JSON body: {\"IDs\":\"<comma separated list of data sources ids>\"}",
                "operationId": "deleteDataSourcesUsingDELETE",
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataSources",
                        "description": "dataSources",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/dataSources/{dataSourceID}": {
            "get": {
                "tags": [
                    "datasources"
                ],
                "summary": "Retrieves the specified data source",
                "operationId": "getDataSourceUsingGET",
                "parameters": [
                    {
                        "name": "dataSourceID",
                        "in": "path",
                        "description": "dataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataSourceRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "datasources"
                ],
                "summary": "Updates the specified data source. It is not necessary to pass the \"projectID\" nor \"id\" in the body. Accepts \"ARNIndexDataSource\", \"CSVDataSource\", \"ElasticsearchRestDatasource\", \"JDBCDataSource\" or \"VDPDataSource\" bodies",
                "operationId": "updateDataSourceUsingPUT_1",
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataSource",
                        "description": "dataSource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataSourceReq"
                        }
                    },
                    {
                        "name": "dataSourceID",
                        "in": "path",
                        "description": "dataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataSourceRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "datasources"
                ],
                "summary": "Deletes the data source",
                "operationId": "deleteDataSourceUsingDELETE",
                "parameters": [
                    {
                        "name": "dataSourceID",
                        "in": "path",
                        "description": "dataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/draftJobs": {
            "post": {
                "tags": [
                    "jobs"
                ],
                "summary": "Creates a draft job. Accepts \"VDPJob\", \"VDPCacheJob\" and \"VDPIndexerJob\" bodies",
                "operationId": "createDraftJobUsingPOST",
                "parameters": [
                    {
                        "in": "body",
                        "name": "job",
                        "description": "job",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobReq"
                        }
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/draftJobs/{jobID}": {
            "put": {
                "tags": [
                    "jobs"
                ],
                "summary": "Updates the specified draft job. It is not necessary to pass the \"projectID\" in the body. Accepts \"VDPJob\", \"VDPCacheJob\" and \"VDPIndexerJob\" bodies",
                "operationId": "updateDraftJobUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "job",
                        "description": "job",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobReq"
                        }
                    },
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/jobs": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "summary": "Retrieves all the jobs from the project. Can be filtered by type. Accepts a query string \"type\": \"VDP\", \"VDPCache\" or \"VDPIndexer\"",
                "operationId": "getJobsFromProjectUsingGET",
                "parameters": [
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JobRes"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "jobs"
                ],
                "summary": "Creates the job in the specified project. \"projectID\" and \"projectName\" should not be included in the json of the body. Accepts \"VDPJob\", \"VDPCacheJob\" and \"VDPIndexerJob\" bodies",
                "operationId": "createJobUsingPOST",
                "parameters": [
                    {
                        "in": "body",
                        "name": "job",
                        "description": "job",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobReq"
                        }
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "jobs"
                ],
                "summary": "Deletes several jobs at once. Expects a JSON body: {\"IDs\":\"<comma separated list of job IDs>\"}",
                "operationId": "deleteJobsUsingDELETE",
                "parameters": [
                    {
                        "in": "body",
                        "name": "jobs",
                        "description": "jobs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/jobs/status": {
            "put": {
                "tags": [
                    "jobs"
                ],
                "summary": "Changes the jobs status by starting, stopping, disabling or enabling them. Expects a JSON body: {\"action\":\"<action>\", \"IDs\": \"<comma separated list of job ids>\"} where action can be: \"start\", \"start_with_state\", \"start_with_dependencies\", \"stop\", \"enable\" or \"disable\"",
                "operationId": "changeJobStatusUsingPUT_1",
                "parameters": [
                    {
                        "in": "body",
                        "name": "jobsToChangeStatus",
                        "description": "jobsToChangeStatus",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/jobs/{jobID}": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "summary": "Retrieves the specified job.",
                "operationId": "getJobUsingGET",
                "parameters": [
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "jobs"
                ],
                "summary": "Updates the specified job. It is not necessary to pass the \"projectID\" in the body. Accepts \"VDPJob\", \"VDPCacheJob\" and \"VDPIndexerJob\" bodies",
                "operationId": "updateJobUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "job",
                        "description": "job",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobReq"
                        }
                    },
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobRes"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "jobs"
                ],
                "summary": "Deletes the job",
                "operationId": "deleteJobUsingDELETE",
                "parameters": [
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/jobs/{jobID}/dependents": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "summary": "Obtains the collection of job identifiers that have dependencies with the specified job",
                "operationId": "getJobDependentsUsingGET",
                "parameters": [
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JobInformation"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/jobs/{jobID}/reports": {
            "get": {
                "tags": [
                    "reports"
                ],
                "summary": "Gets the collection of reports associated to the given job. Accepts two query string \"start\" and \"count\" for pagination",
                "operationId": "getReportsUsingGET",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "count",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "start",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination«AbstractReport»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "reports"
                ],
                "summary": "Removes all reports associated to the given job",
                "operationId": "deleteReportsUsingDELETE",
                "parameters": [
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/jobs/{jobID}/reports/summary": {
            "get": {
                "tags": [
                    "reports"
                ],
                "summary": "Gets the summary of reports associated to the given job. Accepts two query string \"start\" and \"count\" for pagination",
                "operationId": "getReportsSummaryUsingGET",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "count",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "start",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pagination«SummaryReport»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/jobs/{jobID}/reports/{reportID}": {
            "get": {
                "tags": [
                    "reports"
                ],
                "summary": "Gets the job report",
                "operationId": "getReportUsingGET",
                "parameters": [
                    {
                        "name": "reportID",
                        "in": "path",
                        "description": "reportID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AbstractReport"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/jobs/{jobID}/status": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "summary": "Gets the status of the job",
                "operationId": "getJobStatusUsingGET",
                "parameters": [
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobStatusInformation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "jobs"
                ],
                "summary": "Changes the job status by starting, stopping, disabling or enabling it. Expects a JSON body: {\"action\":\"<action>\"} where action can be: \"start\", \"start_with_state\", \"start_with_dependencies\", \"stop\", \"enable\" or \"disable\"",
                "operationId": "changeJobStatusUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "jobAction",
                        "description": "jobAction",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "jobID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/projects/{projectID}/reports": {
            "delete": {
                "tags": [
                    "reports"
                ],
                "summary": "Removes all reports associated to the given jobs. It returns a map of jobs which reports could not be deleted. This map is indexed by the job identifier and the value is the error message. Accepts a query string \"jobIds\" as a comma separated list of job IDs for filtering them",
                "operationId": "deleteReportsUsingDELETE_2",
                "parameters": [
                    {
                        "name": "jobIDs",
                        "in": "query",
                        "description": "jobIDs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "projectID",
                        "in": "path",
                        "description": "projectID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/reports": {
            "post": {
                "tags": [
                    "reports"
                ],
                "summary": "Compresses the job reports table in database. Requires a query string \"action\" with value \"compress\"",
                "operationId": "compressReportsUsingPOST",
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "action",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "COMPRESS"
                        ]
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "reports"
                ],
                "summary": "Removes all the reports by recreating the reports table",
                "operationId": "deleteReportsUsingDELETE_1",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/roles": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "Obtains the roles (name, description and permissions for each one) from Scheduler, already merged with the ones coming from VDP",
                "operationId": "getRolesUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoleRes"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "roles"
                ],
                "summary": "Assigns the privileges to roles, overriding its previous ones if the role existed, or creating it otherwise. Accepts a list of \"Role\" as body",
                "operationId": "assignPrivilegesUsingPOST",
                "parameters": [
                    {
                        "in": "body",
                        "name": "roles",
                        "description": "roles",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoleReq"
                            }
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "roles"
                ],
                "summary": "Deletes several roles at once. Expects a JSON body: {\"names\":\"<comma separated list of role names>\"}",
                "operationId": "deleteRolesUsingDELETE",
                "parameters": [
                    {
                        "in": "body",
                        "name": "names",
                        "description": "names",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/roles/{roleName}": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "Obtains the permissions and info for the specified role name",
                "operationId": "getRoleUsingGET",
                "parameters": [
                    {
                        "name": "roleName",
                        "in": "path",
                        "description": "roleName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RoleRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "roles"
                ],
                "summary": "Assigns the privileges to a role, overriding its previous ones if the role existed, or creating it otherwise. Accepts a \"Role\" as body",
                "operationId": "assignPrivilegesUsingPOST_1",
                "parameters": [
                    {
                        "in": "body",
                        "name": "role",
                        "description": "role",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleReq"
                        }
                    },
                    {
                        "name": "roleName",
                        "in": "path",
                        "description": "roleName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "roles"
                ],
                "summary": "Deletes the role from Scheduler serve",
                "operationId": "deleteRoleUsingDELETE",
                "parameters": [
                    {
                        "name": "roleName",
                        "in": "path",
                        "description": "roleName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/server/connection-data": {
            "get": {
                "tags": [
                    "connection"
                ],
                "summary": "getConnectionData",
                "operationId": "getConnectionDataUsingGET",
                "parameters": [
                    {
                        "name": "refresh",
                        "in": "query",
                        "description": "refresh",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServerData"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/serverMetadata/export": {
            "post": {
                "tags": [
                    "importexport"
                ],
                "summary": "Exports the metadata. Depending on the options, it will include the config, drivers, server properties, etc. The result is an individual zip file (maybe containing both the metadata and the properties file)",
                "operationId": "exportDataUsingPOST",
                "parameters": [
                    {
                        "in": "body",
                        "name": "exportInfo",
                        "description": "exportInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportInfo"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/serverMetadata/exportWithProperties": {
            "post": {
                "tags": [
                    "importexport"
                ],
                "summary": "Exports the metadata. Depending on the options, it will include the config, drivers, server properties, etc. The result is a map with 2 files: one for the metadata and other for the properties",
                "operationId": "exportDataMapUsingPOST",
                "parameters": [
                    {
                        "in": "body",
                        "name": "exportInfo",
                        "description": "exportInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportInfo"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "format": "byte"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/serverMetadata/import": {
            "post": {
                "tags": [
                    "importexport"
                ],
                "summary": "Imports the metadata (optionally with the properties inside). Accepts three body parts in a multipart request: the zip file, the properties file and a \"ImportInfo\"",
                "operationId": "importDataUsingPOST",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "propertiesFile",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "zipFile",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/serverMetadata/showDataContents": {
            "post": {
                "tags": [
                    "importexport"
                ],
                "summary": "Shows the contents (projects with their jobs, data sources and filter sequences) of a zip file that represents a Scheduler backup. Accepts a body part in a multipart request: the zip file",
                "operationId": "showDataContentsUsingPOST",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "zipFile",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ImportDataContents"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/tool-configuration/change-password": {
            "put": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "changePassword",
                "operationId": "changePasswordUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "password",
                        "description": "password",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordDTO"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordDTO"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/tool-configuration/custom-language": {
            "put": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "saveCustomLanguage",
                "operationId": "saveCustomLanguageUsingPUT",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "customLang",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "deleteCustomLanguage",
                "operationId": "deleteCustomLanguageUsingDELETE",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/tool-configuration/custom-theme": {
            "put": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "saveCustomTheme",
                "operationId": "saveCustomThemeUsingPUT",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "customTheme",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "deleteCustomTheme",
                "operationId": "deleteCustomThemeUsingDELETE",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/tool-configuration/denodo-personalization": {
            "get": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "getDenodoPersonalization",
                "operationId": "getDenodoPersonalizationUsingGET",
                "produces": [
                    "application/javascript"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/tool-configuration/informative-message": {
            "get": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "getInformativeMessage",
                "operationId": "getInformativeMessageUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InformativeMessageDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "saveInformativeMessage",
                "operationId": "saveInformativeMessageUsingPUT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "newMessage",
                        "description": "newMessage",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InformativeMessageDTO"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InformativeMessageDTO"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "deleteInformativeMessage",
                "operationId": "deleteInformativeMessageUsingDELETE",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/tool-configuration/kerberos": {
            "get": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "getKerberosSettings",
                "operationId": "getKerberosSettingsUsingGET_1",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/KerberosConfigurationDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "changeKerberosSettings",
                "operationId": "changeKerberosSettingsUsingPUT_1",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "configFile",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "keyTabFile",
                        "in": "formData",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/KerberosConfigurationDTO"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/tool-configuration/kerberos/spn": {
            "get": {
                "tags": [
                    "tool-configuration-controller"
                ],
                "summary": "getKerberosPrincipal",
                "operationId": "getKerberosPrincipalUsingGET_1",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/databaseNames": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns a collection with the names of the databases of the VDP Server defined by the identifier of the data source",
                "operationId": "getDatabaseNamesUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/incrementalCacheStoredProcedure": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns \"200 OK\" whether VDP Server has an incremental cache stored procedure or \"404 Not found\"",
                "operationId": "checkIncrementalCacheStoredProcedureUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/jdbcTableViewNames": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns a collection with the names of the base views over a JDBC table of the VDP Server defined by the identifier of the data source. \"databaseName\" string returns only views from specified database. \"viewNameFilter\" filters views that contains the specified string.",
                "operationId": "getJdbcTableViewNamesByDatabaseUsingGET",
                "parameters": [
                    {
                        "name": "databaseName",
                        "in": "query",
                        "description": "databaseName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "viewNameFilter",
                        "in": "query",
                        "description": "viewNameFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/summaryViewNames": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns a collection with the names of the base views over a summary of the VDP Server defined by the identifier of the data source. \"databaseName\" string returns only views from specified database. \"viewNameFilter\" filters views that contains the specified string.",
                "operationId": "getSummaryViewNamesByDatabaseUsingGET",
                "parameters": [
                    {
                        "name": "databaseName",
                        "in": "query",
                        "description": "databaseName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "viewNameFilter",
                        "in": "query",
                        "description": "viewNameFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/viewNames": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns a collection with the names of the views (base and derived) of the VDP Server defined by the identifier of the data source. Accepts a query string \"onlyPKs\":true or false. \"databaseName\" string returns only views from specified database. \"viewNameFilter\" filters views that contains the specified string.",
                "operationId": "getViewNamesUsingGET",
                "parameters": [
                    {
                        "name": "databaseName",
                        "in": "query",
                        "description": "databaseName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyPKs",
                        "in": "query",
                        "description": "onlyPKs",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "viewNameFilter",
                        "in": "query",
                        "description": "viewNameFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/{query}/validate": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Validates a query against the VDP Server. Accepts a query string \"contextOpts\"",
                "operationId": "validateQueryUsingGET",
                "parameters": [
                    {
                        "name": "contextOpts",
                        "in": "query",
                        "description": "contextOpts",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "path",
                        "description": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ],
                "deprecated": true
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/{viewName}/dateFields": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns the date-type fields of a VDP view",
                "operationId": "getDateFieldsFromViewUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "viewName",
                        "in": "path",
                        "description": "viewName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/{viewName}/fields": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns the fields of a VDP view and which ones are mandatory",
                "operationId": "getFieldsFromViewUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "viewName",
                        "in": "path",
                        "description": "viewName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VDPViewFields"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/{viewName}/orderByExpressionWithPK": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns a default ORDER BY expression generated from the view's PK",
                "operationId": "generateOrderByExpressionWithPkForViewUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "viewName",
                        "in": "path",
                        "description": "viewName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/{viewName}/pkFields": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns the PK fields of a VDP view",
                "operationId": "getPkFieldsFromViewUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "viewName",
                        "in": "path",
                        "description": "viewName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/{viewName}/textFields": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns the text-type fields of a VDP view",
                "operationId": "getTextFieldsFromViewUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "viewName",
                        "in": "path",
                        "description": "viewName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        },
        "/webadmin/denodo-scheduler-admin/public/api/vdpManager/{vdpDataSourceID}/{viewName}/viewInfo": {
            "get": {
                "tags": [
                    "introspection"
                ],
                "summary": "Returns the creation query, pks and fields of a VDP view and which ones are mandatory",
                "operationId": "getViewInfoUsingGET",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Scheduler server",
                        "required": false,
                        "type": "string",
                        "default": "//localhost:8000"
                    },
                    {
                        "name": "vdpDataSourceID",
                        "in": "path",
                        "description": "vdpDataSourceID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "viewName",
                        "in": "path",
                        "description": "viewName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ViewInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Denodo": []
                    },
                    {
                        "OAuth Access Token": []
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "Denodo": {
            "type": "basic"
        },
        "OAuth Access Token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "ARNIndexDataSource": {
            "title": "ARNIndexDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSource"
                },
                {
                    "type": "object",
                    "required": [
                        "host",
                        "login",
                        "name",
                        "port"
                    ],
                    "properties": {
                        "host": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1024,
                            "exclusiveMinimum": false
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        }
                    },
                    "title": "ARNIndexDataSource",
                    "description": "ARNIndex DataSource"
                }
            ],
            "description": "ARNIndex DataSource"
        },
        "ARNIndexDataSourceReq": {
            "title": "ARNIndexDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSourceReq"
                },
                {
                    "type": "object",
                    "required": [
                        "host",
                        "login",
                        "name",
                        "password",
                        "port"
                    ],
                    "properties": {
                        "host": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1024,
                            "exclusiveMinimum": false
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        }
                    },
                    "title": "ARNIndexDataSourceReq",
                    "description": "ARNIndex DataSource"
                }
            ],
            "description": "ARNIndex DataSource"
        },
        "ARNIndexDataSourceRes": {
            "title": "ARNIndexDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSourceRes"
                },
                {
                    "type": "object",
                    "required": [
                        "host",
                        "login",
                        "name",
                        "port"
                    ],
                    "properties": {
                        "host": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1024,
                            "exclusiveMinimum": false
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        }
                    },
                    "title": "ARNIndexDataSourceRes",
                    "description": "ARNIndex DataSource"
                }
            ],
            "description": "ARNIndex DataSource"
        },
        "AbstractReport": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "extractedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractorErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extractorWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handlerErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "initializationErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "misfireError": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "ERROR",
                        "MISFIRED",
                        "NEVER_EXECUTED",
                        "STOPPED",
                        "WARNING"
                    ]
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryJob": {
                    "type": "boolean"
                },
                "sourcesErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "AbstractReport"
        },
        "AllConfigurationReq": {
            "type": "object",
            "properties": {
                "clusterConfiguration": {
                    "$ref": "#/definitions/ClusterConfiguration"
                },
                "databaseConfiguration": {
                    "$ref": "#/definitions/DatabaseConfigurationReq"
                },
                "elasticAnalyzers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "i18n": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kerberosConfiguration": {
                    "$ref": "#/definitions/KerberosConfiguration"
                },
                "mailConfiguration": {
                    "$ref": "#/definitions/MailConfigurationReq"
                },
                "serverConfiguration": {
                    "$ref": "#/definitions/ServerConfiguration"
                },
                "serverPortsConfiguration": {
                    "$ref": "#/definitions/ServerPortsConfiguration"
                },
                "vdpDataSourceConfiguration": {
                    "$ref": "#/definitions/VDPDataSourceConfiguration"
                }
            },
            "title": "AllConfigurationReq"
        },
        "AllConfigurationRes": {
            "type": "object",
            "properties": {
                "clusterConfiguration": {
                    "$ref": "#/definitions/ClusterConfiguration"
                },
                "databaseConfiguration": {
                    "$ref": "#/definitions/DatabaseConfigurationRes"
                },
                "elasticAnalyzers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "i18n": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kerberosConfiguration": {
                    "$ref": "#/definitions/KerberosConfiguration"
                },
                "mailConfiguration": {
                    "$ref": "#/definitions/MailConfigurationRes"
                },
                "serverConfiguration": {
                    "$ref": "#/definitions/ServerConfiguration"
                },
                "serverPortsConfiguration": {
                    "$ref": "#/definitions/ServerPortsConfiguration"
                },
                "vdpDataSourceConfiguration": {
                    "$ref": "#/definitions/VDPDataSourceConfiguration"
                }
            },
            "title": "AllConfigurationRes"
        },
        "CSVDataSource": {
            "title": "CSVDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSource"
                },
                {
                    "type": "object",
                    "required": [
                        "file",
                        "name",
                        "separator"
                    ],
                    "properties": {
                        "file": {
                            "type": "string"
                        },
                        "fileContents": {
                            "type": "string",
                            "format": "byte"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "separator": {
                            "type": "string"
                        },
                        "skipHeader": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        },
                        "uploadToServer": {
                            "type": "boolean"
                        }
                    },
                    "title": "CSVDataSource",
                    "description": "CSV DataSource"
                }
            ],
            "description": "CSV DataSource"
        },
        "CSVDataSourceReq": {
            "title": "CSVDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSourceReq"
                },
                {
                    "type": "object",
                    "required": [
                        "file",
                        "name",
                        "separator"
                    ],
                    "properties": {
                        "file": {
                            "type": "string"
                        },
                        "fileContents": {
                            "type": "string",
                            "format": "byte"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "separator": {
                            "type": "string"
                        },
                        "skipHeader": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        },
                        "uploadToServer": {
                            "type": "boolean"
                        }
                    },
                    "title": "CSVDataSourceReq",
                    "description": "CSV DataSource"
                }
            ],
            "description": "CSV DataSource"
        },
        "CSVDataSourceRes": {
            "title": "CSVDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSourceRes"
                },
                {
                    "type": "object",
                    "required": [
                        "file",
                        "name",
                        "separator"
                    ],
                    "properties": {
                        "file": {
                            "type": "string"
                        },
                        "fileContents": {
                            "type": "string",
                            "format": "byte"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "separator": {
                            "type": "string"
                        },
                        "skipHeader": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        },
                        "uploadToServer": {
                            "type": "boolean"
                        }
                    },
                    "title": "CSVDataSourceRes",
                    "description": "CSV DataSource"
                }
            ],
            "description": "CSV DataSource"
        },
        "CSVExporter": {
            "title": "CSVExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/Exporter"
                },
                {
                    "type": "object",
                    "required": [
                        "filter",
                        "type"
                    ],
                    "properties": {
                        "allowEmptyFile": {
                            "type": "boolean"
                        },
                        "appendFile": {
                            "type": "boolean"
                        },
                        "createNewFile": {
                            "type": "boolean"
                        },
                        "encoding": {
                            "type": "string"
                        },
                        "exportInternalFields": {
                            "type": "boolean"
                        },
                        "exportOnlyMappings": {
                            "type": "boolean"
                        },
                        "fileName": {
                            "type": "string"
                        },
                        "filter": {
                            "type": "string",
                            "enum": [
                                "ENCRYPT",
                                "NEW_ENCRYPT",
                                "NONE",
                                "ZIP"
                            ]
                        },
                        "i18n": {
                            "type": "string"
                        },
                        "includeHeader": {
                            "type": "boolean"
                        },
                        "mappings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Mapping"
                            }
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "overwriteFile": {
                            "type": "boolean"
                        },
                        "quoteAllFields": {
                            "type": "boolean"
                        },
                        "quoteFieldsOption": {
                            "type": "string",
                            "enum": [
                                "ALWAYS",
                                "NEVER",
                                "WHEN_REQUIRED"
                            ]
                        },
                        "separator": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        }
                    },
                    "title": "CSVExporter"
                }
            ]
        },
        "CSVExporterReq": {
            "title": "CSVExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/ExporterReq"
                },
                {
                    "type": "object",
                    "required": [
                        "filter",
                        "type"
                    ],
                    "properties": {
                        "allowEmptyFile": {
                            "type": "boolean"
                        },
                        "appendFile": {
                            "type": "boolean"
                        },
                        "createNewFile": {
                            "type": "boolean"
                        },
                        "encoding": {
                            "type": "string"
                        },
                        "encryptionPassword": {
                            "type": "string"
                        },
                        "exportInternalFields": {
                            "type": "boolean"
                        },
                        "exportOnlyMappings": {
                            "type": "boolean"
                        },
                        "fileName": {
                            "type": "string"
                        },
                        "filter": {
                            "type": "string",
                            "enum": [
                                "ENCRYPT",
                                "NEW_ENCRYPT",
                                "NONE",
                                "ZIP"
                            ]
                        },
                        "i18n": {
                            "type": "string"
                        },
                        "includeHeader": {
                            "type": "boolean"
                        },
                        "mappings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Mapping"
                            }
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "overwriteFile": {
                            "type": "boolean"
                        },
                        "quoteAllFields": {
                            "type": "boolean"
                        },
                        "quoteFieldsOption": {
                            "type": "string",
                            "enum": [
                                "ALWAYS",
                                "NEVER",
                                "WHEN_REQUIRED"
                            ]
                        },
                        "separator": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        }
                    },
                    "title": "CSVExporterReq"
                }
            ]
        },
        "CSVExporterRes": {
            "title": "CSVExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/ExporterRes"
                },
                {
                    "type": "object",
                    "required": [
                        "filter",
                        "type"
                    ],
                    "properties": {
                        "allowEmptyFile": {
                            "type": "boolean"
                        },
                        "appendFile": {
                            "type": "boolean"
                        },
                        "createNewFile": {
                            "type": "boolean"
                        },
                        "encoding": {
                            "type": "string"
                        },
                        "exportInternalFields": {
                            "type": "boolean"
                        },
                        "exportOnlyMappings": {
                            "type": "boolean"
                        },
                        "fileName": {
                            "type": "string"
                        },
                        "filter": {
                            "type": "string",
                            "enum": [
                                "ENCRYPT",
                                "NEW_ENCRYPT",
                                "NONE",
                                "ZIP"
                            ]
                        },
                        "i18n": {
                            "type": "string"
                        },
                        "includeHeader": {
                            "type": "boolean"
                        },
                        "mappings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Mapping"
                            }
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "overwriteFile": {
                            "type": "boolean"
                        },
                        "quoteAllFields": {
                            "type": "boolean"
                        },
                        "quoteFieldsOption": {
                            "type": "string",
                            "enum": [
                                "ALWAYS",
                                "NEVER",
                                "WHEN_REQUIRED"
                            ]
                        },
                        "separator": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        }
                    },
                    "title": "CSVExporterRes"
                }
            ]
        },
        "CSVSource": {
            "title": "CSVSource",
            "allOf": [
                {
                    "$ref": "#/definitions/Source"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "CSVSource"
                }
            ]
        },
        "CSVSourceReq": {
            "title": "CSVSource",
            "allOf": [
                {
                    "$ref": "#/definitions/SourceReq"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "CSVSourceReq"
                }
            ]
        },
        "CSVSourceRes": {
            "title": "CSVSource",
            "allOf": [
                {
                    "$ref": "#/definitions/SourceRes"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "CSVSourceRes"
                }
            ]
        },
        "CacheLoadProcess": {
            "type": "object",
            "required": [
                "parameterizedQuery"
            ],
            "properties": {
                "cacheAtomicOperation": {
                    "type": "boolean"
                },
                "cacheContextOpts": {
                    "type": "string"
                },
                "cacheInvalidationMode": {
                    "type": "string"
                },
                "cacheLoadOnError": {
                    "type": "boolean"
                },
                "concurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "database": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldSource"
                    }
                },
                "incrementalCaching": {
                    "$ref": "#/definitions/IncrementalCaching"
                },
                "incrementalFieldName": {
                    "type": "string"
                },
                "loadProcessName": {
                    "type": "string"
                },
                "maxIterations": {
                    "type": "integer",
                    "format": "int32"
                },
                "parameterizedQuery": {
                    "type": "string"
                },
                "sourcesNotChange": {
                    "type": "boolean"
                },
                "view": {
                    "type": "string"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "CacheLoadProcess"
        },
        "CacheLoadProcessReq": {
            "type": "object",
            "required": [
                "parameterizedQuery"
            ],
            "properties": {
                "cacheAtomicOperation": {
                    "type": "boolean"
                },
                "cacheContextOpts": {
                    "type": "string"
                },
                "cacheInvalidationMode": {
                    "type": "string"
                },
                "cacheLoadOnError": {
                    "type": "boolean"
                },
                "concurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "database": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldSourceReq"
                    }
                },
                "incrementalCaching": {
                    "$ref": "#/definitions/IncrementalCaching"
                },
                "incrementalFieldName": {
                    "type": "string"
                },
                "loadProcessName": {
                    "type": "string"
                },
                "maxIterations": {
                    "type": "integer",
                    "format": "int32"
                },
                "parameterizedQuery": {
                    "type": "string"
                },
                "sourcesNotChange": {
                    "type": "boolean"
                },
                "view": {
                    "type": "string"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "CacheLoadProcessReq"
        },
        "CacheLoadProcessRes": {
            "type": "object",
            "required": [
                "parameterizedQuery"
            ],
            "properties": {
                "cacheAtomicOperation": {
                    "type": "boolean"
                },
                "cacheContextOpts": {
                    "type": "string"
                },
                "cacheInvalidationMode": {
                    "type": "string"
                },
                "cacheLoadOnError": {
                    "type": "boolean"
                },
                "concurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "database": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldSourceRes"
                    }
                },
                "incrementalCaching": {
                    "$ref": "#/definitions/IncrementalCaching"
                },
                "incrementalFieldName": {
                    "type": "string"
                },
                "loadProcessName": {
                    "type": "string"
                },
                "maxIterations": {
                    "type": "integer",
                    "format": "int32"
                },
                "parameterizedQuery": {
                    "type": "string"
                },
                "sourcesNotChange": {
                    "type": "boolean"
                },
                "view": {
                    "type": "string"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "CacheLoadProcessRes"
        },
        "ChangePasswordDTO": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            },
            "title": "ChangePasswordDTO"
        },
        "ClusterConfiguration": {
            "type": "object",
            "properties": {
                "checkInterval": {
                    "type": "integer",
                    "format": "int64"
                },
                "clustered": {
                    "type": "boolean"
                },
                "identifier": {
                    "type": "string"
                }
            },
            "title": "ClusterConfiguration"
        },
        "CommonParametersExtractionData": {
            "type": "object",
            "required": [
                "parameterizedQuery"
            ],
            "properties": {
                "concurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldSource"
                    }
                },
                "maxIterations": {
                    "type": "integer",
                    "format": "int32"
                },
                "parameterizedQuery": {
                    "type": "string"
                },
                "sourcesNotChange": {
                    "type": "boolean"
                }
            },
            "title": "CommonParametersExtractionData"
        },
        "CommonParametersExtractionDataReq": {
            "type": "object",
            "required": [
                "parameterizedQuery"
            ],
            "properties": {
                "concurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldSourceReq"
                    }
                },
                "maxIterations": {
                    "type": "integer",
                    "format": "int32"
                },
                "parameterizedQuery": {
                    "type": "string"
                },
                "sourcesNotChange": {
                    "type": "boolean"
                }
            },
            "title": "CommonParametersExtractionDataReq"
        },
        "CommonParametersExtractionDataRes": {
            "type": "object",
            "required": [
                "parameterizedQuery"
            ],
            "properties": {
                "concurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldSourceRes"
                    }
                },
                "maxIterations": {
                    "type": "integer",
                    "format": "int32"
                },
                "parameterizedQuery": {
                    "type": "string"
                },
                "sourcesNotChange": {
                    "type": "boolean"
                }
            },
            "title": "CommonParametersExtractionDataRes"
        },
        "CompoundField": {
            "title": "CompoundField",
            "allOf": [
                {
                    "$ref": "#/definitions/Field«object»"
                },
                {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "compoundField",
                                "simpleField"
                            ]
                        },
                        "values": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FieldStructure«object»"
                            }
                        }
                    },
                    "title": "CompoundField"
                }
            ]
        },
        "ConfigurationData": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer",
                    "format": "int32"
                },
                "projectName": {
                    "type": "string"
                }
            },
            "title": "ConfigurationData"
        },
        "CustomExporter": {
            "title": "CustomExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/Exporter"
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "typeName"
                    ],
                    "properties": {
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parameters": {
                            "$ref": "#/definitions/FieldStructure"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        },
                        "typeName": {
                            "type": "string"
                        }
                    },
                    "title": "CustomExporter"
                }
            ]
        },
        "CustomExporterReq": {
            "title": "CustomExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/ExporterReq"
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "typeName"
                    ],
                    "properties": {
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parameters": {
                            "$ref": "#/definitions/FieldStructureReq"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        },
                        "typeName": {
                            "type": "string"
                        }
                    },
                    "title": "CustomExporterReq"
                }
            ]
        },
        "CustomExporterRes": {
            "title": "CustomExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/ExporterRes"
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "typeName"
                    ],
                    "properties": {
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parameters": {
                            "$ref": "#/definitions/FieldStructureRes"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        },
                        "typeName": {
                            "type": "string"
                        }
                    },
                    "title": "CustomExporterRes"
                }
            ]
        },
        "CustomHandler": {
            "title": "CustomHandler",
            "allOf": [
                {
                    "$ref": "#/definitions/Handler"
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "typeName"
                    ],
                    "properties": {
                        "handleOnlyOnLastRetry": {
                            "type": "boolean"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parameters": {
                            "$ref": "#/definitions/FieldStructure"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Custom",
                                "mail",
                                "retry"
                            ]
                        },
                        "typeName": {
                            "type": "string"
                        }
                    },
                    "title": "CustomHandler"
                }
            ]
        },
        "CustomHandlerReq": {
            "title": "CustomHandler",
            "allOf": [
                {
                    "$ref": "#/definitions/HandlerReq"
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "typeName"
                    ],
                    "properties": {
                        "handleOnlyOnLastRetry": {
                            "type": "boolean"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parameters": {
                            "$ref": "#/definitions/FieldStructureReq"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Custom",
                                "mail",
                                "retry"
                            ]
                        },
                        "typeName": {
                            "type": "string"
                        }
                    },
                    "title": "CustomHandlerReq"
                }
            ]
        },
        "CustomHandlerRes": {
            "title": "CustomHandler",
            "allOf": [
                {
                    "$ref": "#/definitions/HandlerRes"
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "typeName"
                    ],
                    "properties": {
                        "handleOnlyOnLastRetry": {
                            "type": "boolean"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parameters": {
                            "$ref": "#/definitions/FieldStructureRes"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Custom",
                                "mail",
                                "retry"
                            ]
                        },
                        "typeName": {
                            "type": "string"
                        }
                    },
                    "title": "CustomHandlerRes"
                }
            ]
        },
        "DataSource": {
            "type": "object",
            "discriminator": "type",
            "properties": {
                "configurationData": {
                    "$ref": "#/definitions/ConfigurationData"
                }
            },
            "title": "DataSource"
        },
        "DataSourceReq": {
            "type": "object",
            "discriminator": "type",
            "title": "DataSourceReq"
        },
        "DataSourceRes": {
            "type": "object",
            "discriminator": "type",
            "properties": {
                "configurationData": {
                    "$ref": "#/definitions/ConfigurationData"
                }
            },
            "title": "DataSourceRes"
        },
        "DatabaseConfigurationReq": {
            "type": "object",
            "required": [
                "database",
                "driverClassName",
                "uri"
            ],
            "properties": {
                "checkConnectivity": {
                    "type": "boolean"
                },
                "database": {
                    "type": "string"
                },
                "driverClassName": {
                    "type": "string"
                },
                "driverClassPath": {
                    "type": "string"
                },
                "exportCurrentMetadata": {
                    "type": "boolean"
                },
                "kerberosAuth": {
                    "type": "boolean"
                },
                "keyTab": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "title": "DatabaseConfigurationReq"
        },
        "DatabaseConfigurationRes": {
            "type": "object",
            "required": [
                "database",
                "driverClassName",
                "uri"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "driverClassName": {
                    "type": "string"
                },
                "driverClassPath": {
                    "type": "string"
                },
                "kerberosAuth": {
                    "type": "boolean"
                },
                "keyTab": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "title": "DatabaseConfigurationRes"
        },
        "DatabaseSource": {
            "title": "DatabaseSource",
            "allOf": [
                {
                    "$ref": "#/definitions/Source"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "nonParameterizedQuery",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonParameterizedQuery": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "DatabaseSource"
                }
            ]
        },
        "DatabaseSourceReq": {
            "title": "DatabaseSource",
            "allOf": [
                {
                    "$ref": "#/definitions/SourceReq"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "nonParameterizedQuery",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonParameterizedQuery": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "DatabaseSourceReq"
                }
            ]
        },
        "DatabaseSourceRes": {
            "title": "DatabaseSource",
            "allOf": [
                {
                    "$ref": "#/definitions/SourceRes"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "nonParameterizedQuery",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonParameterizedQuery": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "DatabaseSourceRes"
                }
            ]
        },
        "DefaultConfiguration«object»": {
            "type": "object",
            "properties": {
                "instances": {
                    "type": "integer",
                    "format": "int32"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            },
            "title": "DefaultConfiguration«object»"
        },
        "Dependency": {
            "type": "object",
            "properties": {
                "executeAnyway": {
                    "type": "boolean"
                },
                "jobIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "timeout": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "Dependency"
        },
        "DriverInfoReq": {
            "type": "object",
            "required": [
                "className",
                "dataBaseAdapter",
                "dataBaseVersion",
                "uriTemplate"
            ],
            "properties": {
                "className": {
                    "type": "string"
                },
                "dataBaseAdapter": {
                    "type": "string"
                },
                "dataBaseVersion": {
                    "type": "string"
                },
                "uriTemplate": {
                    "type": "string"
                },
                "validForMetadata": {
                    "type": "boolean"
                }
            },
            "title": "DriverInfoReq"
        },
        "DriverInfoRes": {
            "type": "object",
            "required": [
                "className",
                "dataBaseAdapter",
                "dataBaseVersion",
                "uriTemplate"
            ],
            "properties": {
                "className": {
                    "type": "string"
                },
                "dataBaseAdapter": {
                    "type": "string"
                },
                "dataBaseVersion": {
                    "type": "string"
                },
                "driverName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "registrar": {
                    "type": "string"
                },
                "uriTemplate": {
                    "type": "string"
                },
                "validForMetadata": {
                    "type": "boolean"
                }
            },
            "title": "DriverInfoRes"
        },
        "ElasticSearchExporter": {
            "title": "ElasticSearchExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/Exporter"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "index",
                        "indexConfig",
                        "type"
                    ],
                    "properties": {
                        "bulkProcessorChunkSizeMB": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "bulkProcessorConcurrencyLevel": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "bulkProcessorDocumentChunkSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "bulkProcessorFlushInterval": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "clearIndex": {
                            "type": "boolean"
                        },
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "index": {
                            "type": "string"
                        },
                        "indexConfig": {
                            "$ref": "#/definitions/IndexConfig"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "recreateIndex": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        }
                    },
                    "title": "ElasticSearchExporter"
                }
            ]
        },
        "ElasticSearchExporterReq": {
            "title": "ElasticSearchExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/ExporterReq"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "index",
                        "indexConfig",
                        "type"
                    ],
                    "properties": {
                        "bulkProcessorChunkSizeMB": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "bulkProcessorConcurrencyLevel": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "bulkProcessorDocumentChunkSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "bulkProcessorFlushInterval": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "clearIndex": {
                            "type": "boolean"
                        },
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "index": {
                            "type": "string"
                        },
                        "indexConfig": {
                            "$ref": "#/definitions/IndexConfig"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "recreateIndex": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        }
                    },
                    "title": "ElasticSearchExporterReq"
                }
            ]
        },
        "ElasticSearchExporterRes": {
            "title": "ElasticSearchExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/ExporterRes"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "index",
                        "indexConfig",
                        "type"
                    ],
                    "properties": {
                        "bulkProcessorChunkSizeMB": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "bulkProcessorConcurrencyLevel": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "bulkProcessorDocumentChunkSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "bulkProcessorFlushInterval": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "clearIndex": {
                            "type": "boolean"
                        },
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "index": {
                            "type": "string"
                        },
                        "indexConfig": {
                            "$ref": "#/definitions/IndexConfig"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "recreateIndex": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        }
                    },
                    "title": "ElasticSearchExporterRes"
                }
            ]
        },
        "ElasticsearchRestDatasource": {
            "title": "ElasticsearchRestDatasource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSource"
                },
                {
                    "type": "object",
                    "required": [
                        "host",
                        "login",
                        "name"
                    ],
                    "properties": {
                        "host": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "secure": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        }
                    },
                    "title": "ElasticsearchRestDatasource",
                    "description": "Elastic Rest DataSource"
                }
            ],
            "description": "Elastic Rest DataSource"
        },
        "ElasticsearchRestDatasourceReq": {
            "title": "ElasticsearchRestDatasource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSourceReq"
                },
                {
                    "type": "object",
                    "required": [
                        "host",
                        "login",
                        "name",
                        "password"
                    ],
                    "properties": {
                        "host": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "secure": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        }
                    },
                    "title": "ElasticsearchRestDatasourceReq",
                    "description": "Elastic Rest DataSource"
                }
            ],
            "description": "Elastic Rest DataSource"
        },
        "ElasticsearchRestDatasourceRes": {
            "title": "ElasticsearchRestDatasource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSourceRes"
                },
                {
                    "type": "object",
                    "required": [
                        "host",
                        "login",
                        "name"
                    ],
                    "properties": {
                        "host": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "secure": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        }
                    },
                    "title": "ElasticsearchRestDatasourceRes",
                    "description": "Elastic Rest DataSource"
                }
            ],
            "description": "Elastic Rest DataSource"
        },
        "ExportInfo": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "boolean"
                },
                "drivers": {
                    "type": "boolean"
                },
                "elementsToExport": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "exportDependencies": {
                    "type": "boolean"
                },
                "exportWithProperties": {
                    "type": "boolean"
                },
                "metadataPassword": {
                    "type": "string"
                },
                "permissions": {
                    "type": "boolean"
                },
                "plugins": {
                    "type": "boolean"
                }
            },
            "title": "ExportInfo"
        },
        "ExportationSection": {
            "type": "object",
            "properties": {
                "exportAsTransaction": {
                    "type": "boolean"
                },
                "exporters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Exporter"
                    }
                }
            },
            "title": "ExportationSection"
        },
        "ExportationSectionReq": {
            "type": "object",
            "properties": {
                "exportAsTransaction": {
                    "type": "boolean"
                },
                "exporters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExporterReq"
                    }
                }
            },
            "title": "ExportationSectionReq"
        },
        "ExportationSectionRes": {
            "type": "object",
            "properties": {
                "exportAsTransaction": {
                    "type": "boolean"
                },
                "exporters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExporterRes"
                    }
                }
            },
            "title": "ExportationSectionRes"
        },
        "Exporter": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "originalIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "CSV",
                        "Custom",
                        "Elasticsearch",
                        "JDBC",
                        "Scheduler-Index"
                    ]
                }
            },
            "title": "Exporter"
        },
        "ExporterReq": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "originalIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "CSV",
                        "Custom",
                        "Elasticsearch",
                        "JDBC",
                        "Scheduler-Index"
                    ]
                }
            },
            "title": "ExporterReq"
        },
        "ExporterRes": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "originalIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "CSV",
                        "Custom",
                        "Elasticsearch",
                        "JDBC",
                        "Scheduler-Index"
                    ]
                }
            },
            "title": "ExporterRes"
        },
        "Field": {
            "type": "object",
            "required": [
                "queryParamName"
            ],
            "properties": {
                "queryParamName": {
                    "type": "string"
                },
                "sourceParamName": {
                    "type": "string"
                }
            },
            "title": "Field"
        },
        "FieldSource": {
            "type": "object",
            "required": [
                "source"
            ],
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                },
                "source": {
                    "$ref": "#/definitions/Source"
                }
            },
            "title": "FieldSource"
        },
        "FieldSourceReq": {
            "type": "object",
            "required": [
                "source"
            ],
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                },
                "source": {
                    "$ref": "#/definitions/SourceReq"
                }
            },
            "title": "FieldSourceReq"
        },
        "FieldSourceRes": {
            "type": "object",
            "required": [
                "source"
            ],
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                },
                "source": {
                    "$ref": "#/definitions/SourceRes"
                }
            },
            "title": "FieldSourceRes"
        },
        "FieldStructure": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Field«object»"
                    }
                }
            },
            "title": "FieldStructure"
        },
        "FieldStructureReq": {
            "type": "object",
            "title": "FieldStructureReq"
        },
        "FieldStructureRes": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Field«object»"
                    }
                }
            },
            "title": "FieldStructureRes"
        },
        "FieldStructure«object»": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Field«object»"
                    }
                }
            },
            "title": "FieldStructure«object»"
        },
        "Field«object»": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            },
            "title": "Field«object»"
        },
        "Handler": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "handleOnlyOnLastRetry": {
                    "type": "boolean"
                },
                "originalIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Custom",
                        "mail",
                        "retry"
                    ]
                }
            },
            "title": "Handler"
        },
        "HandlerReq": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "handleOnlyOnLastRetry": {
                    "type": "boolean"
                },
                "originalIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Custom",
                        "mail",
                        "retry"
                    ]
                }
            },
            "title": "HandlerReq"
        },
        "HandlerRes": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "handleOnlyOnLastRetry": {
                    "type": "boolean"
                },
                "originalIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Custom",
                        "mail",
                        "retry"
                    ]
                }
            },
            "title": "HandlerRes"
        },
        "HandlerSection": {
            "type": "object",
            "properties": {
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Handler"
                    }
                }
            },
            "title": "HandlerSection"
        },
        "HandlerSectionReq": {
            "type": "object",
            "properties": {
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HandlerReq"
                    }
                }
            },
            "title": "HandlerSectionReq"
        },
        "HandlerSectionRes": {
            "type": "object",
            "properties": {
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HandlerRes"
                    }
                }
            },
            "title": "HandlerSectionRes"
        },
        "IMetadata": {
            "type": "object",
            "title": "IMetadata"
        },
        "ImportDataContents": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "$ref": "#/definitions/Pair«string,boolean»"
                            }
                        }
                    }
                }
            },
            "title": "ImportDataContents"
        },
        "ImportInfo": {
            "type": "object",
            "properties": {
                "elementsToImport": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "metadataPassword": {
                    "type": "string"
                },
                "replace": {
                    "type": "boolean"
                },
                "replaceDataSources": {
                    "type": "boolean"
                },
                "replaceDrivers": {
                    "type": "boolean"
                },
                "replaceJobs": {
                    "type": "boolean"
                },
                "replacePlugins": {
                    "type": "boolean"
                }
            },
            "title": "ImportInfo"
        },
        "IncrementalCaching": {
            "type": "object",
            "properties": {
                "cacheIncrementalLoadBlockSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "cacheIncrementalLoadEnabled": {
                    "type": "boolean"
                },
                "cacheIncrementalLoadFieldName": {
                    "type": "string"
                }
            },
            "title": "IncrementalCaching"
        },
        "IndexConfig": {
            "type": "object",
            "properties": {
                "analyzer": {
                    "type": "string"
                },
                "replicas": {
                    "type": "integer",
                    "format": "int32"
                },
                "shards": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "IndexConfig"
        },
        "InformativeMessageDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "title": "InformativeMessageDTO"
        },
        "JDBCDataSource": {
            "title": "JDBCDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSource"
                },
                {
                    "type": "object",
                    "required": [
                        "chunkSize",
                        "chunkTimeout",
                        "connectionURI",
                        "driverClassName",
                        "host",
                        "login",
                        "name",
                        "port",
                        "queryTimeout"
                    ],
                    "properties": {
                        "chunkSize": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "chunkTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "classpath": {
                            "type": "string"
                        },
                        "connectionURI": {
                            "type": "string"
                        },
                        "dbAdapter": {
                            "type": "string"
                        },
                        "driverClassName": {
                            "type": "string"
                        },
                        "host": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "poolEnabled": {
                            "type": "boolean"
                        },
                        "poolExhaustedAction": {
                            "type": "string",
                            "format": "byte"
                        },
                        "poolInitSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolInitialCapacityPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxActive": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxSleepingPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxWait": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinEvidectableTime": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolNumTestPerEviction": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolPreparedStatements": {
                            "type": "boolean"
                        },
                        "poolTestOnBorrow": {
                            "type": "boolean"
                        },
                        "poolTestOnReturn": {
                            "type": "boolean"
                        },
                        "poolTestWhileIdle": {
                            "type": "boolean"
                        },
                        "poolTimeBetweenEviction": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolValidationQuery": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1024,
                            "exclusiveMinimum": false
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "queryTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        }
                    },
                    "title": "JDBCDataSource",
                    "description": "JDBC DataSource"
                }
            ],
            "description": "JDBC DataSource"
        },
        "JDBCDataSourceReq": {
            "title": "JDBCDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSourceReq"
                },
                {
                    "type": "object",
                    "required": [
                        "chunkSize",
                        "chunkTimeout",
                        "connectionURI",
                        "driverClassName",
                        "host",
                        "login",
                        "name",
                        "password",
                        "port",
                        "queryTimeout"
                    ],
                    "properties": {
                        "chunkSize": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "chunkTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "classpath": {
                            "type": "string"
                        },
                        "connectionURI": {
                            "type": "string"
                        },
                        "dbAdapter": {
                            "type": "string"
                        },
                        "driverClassName": {
                            "type": "string"
                        },
                        "host": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "poolEnabled": {
                            "type": "boolean"
                        },
                        "poolExhaustedAction": {
                            "type": "string",
                            "format": "byte"
                        },
                        "poolInitSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolInitialCapacityPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxActive": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxSleepingPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxWait": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinEvidectableTime": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolNumTestPerEviction": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolPreparedStatements": {
                            "type": "boolean"
                        },
                        "poolTestOnBorrow": {
                            "type": "boolean"
                        },
                        "poolTestOnReturn": {
                            "type": "boolean"
                        },
                        "poolTestWhileIdle": {
                            "type": "boolean"
                        },
                        "poolTimeBetweenEviction": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolValidationQuery": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1024,
                            "exclusiveMinimum": false
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "queryTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        }
                    },
                    "title": "JDBCDataSourceReq",
                    "description": "JDBC DataSource"
                }
            ],
            "description": "JDBC DataSource"
        },
        "JDBCDataSourceRes": {
            "title": "JDBCDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSourceRes"
                },
                {
                    "type": "object",
                    "required": [
                        "chunkSize",
                        "chunkTimeout",
                        "connectionURI",
                        "driverClassName",
                        "host",
                        "login",
                        "name",
                        "port",
                        "queryTimeout"
                    ],
                    "properties": {
                        "chunkSize": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "chunkTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "classpath": {
                            "type": "string"
                        },
                        "connectionURI": {
                            "type": "string"
                        },
                        "dbAdapter": {
                            "type": "string"
                        },
                        "driverClassName": {
                            "type": "string"
                        },
                        "host": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "poolEnabled": {
                            "type": "boolean"
                        },
                        "poolExhaustedAction": {
                            "type": "string",
                            "format": "byte"
                        },
                        "poolInitSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolInitialCapacityPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxActive": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxSleepingPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxWait": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinEvidectableTime": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolNumTestPerEviction": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolPreparedStatements": {
                            "type": "boolean"
                        },
                        "poolTestOnBorrow": {
                            "type": "boolean"
                        },
                        "poolTestOnReturn": {
                            "type": "boolean"
                        },
                        "poolTestWhileIdle": {
                            "type": "boolean"
                        },
                        "poolTimeBetweenEviction": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolValidationQuery": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1024,
                            "exclusiveMinimum": false
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "queryTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        }
                    },
                    "title": "JDBCDataSourceRes",
                    "description": "JDBC DataSource"
                }
            ],
            "description": "JDBC DataSource"
        },
        "JDBCExporter": {
            "title": "JDBCExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/Exporter"
                },
                {
                    "type": "object",
                    "required": [
                        "batchSize",
                        "dataSourceID",
                        "table",
                        "type"
                    ],
                    "properties": {
                        "batchSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "catalog": {
                            "type": "string"
                        },
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "deleteTableContent": {
                            "type": "boolean"
                        },
                        "exportInternalFields": {
                            "type": "boolean"
                        },
                        "exportOnlyMappings": {
                            "type": "boolean"
                        },
                        "mappings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Mapping"
                            }
                        },
                        "oneTransaction": {
                            "type": "boolean"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rollbackIfError": {
                            "type": "boolean"
                        },
                        "schema": {
                            "type": "string"
                        },
                        "table": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        },
                        "updateTupleIfExists": {
                            "type": "boolean"
                        }
                    },
                    "title": "JDBCExporter"
                }
            ]
        },
        "JDBCExporterReq": {
            "title": "JDBCExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/ExporterReq"
                },
                {
                    "type": "object",
                    "required": [
                        "batchSize",
                        "dataSourceID",
                        "table",
                        "type"
                    ],
                    "properties": {
                        "batchSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "catalog": {
                            "type": "string"
                        },
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "deleteTableContent": {
                            "type": "boolean"
                        },
                        "exportInternalFields": {
                            "type": "boolean"
                        },
                        "exportOnlyMappings": {
                            "type": "boolean"
                        },
                        "mappings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Mapping"
                            }
                        },
                        "oneTransaction": {
                            "type": "boolean"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rollbackIfError": {
                            "type": "boolean"
                        },
                        "schema": {
                            "type": "string"
                        },
                        "table": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        },
                        "updateTupleIfExists": {
                            "type": "boolean"
                        }
                    },
                    "title": "JDBCExporterReq"
                }
            ]
        },
        "JDBCExporterRes": {
            "title": "JDBCExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/ExporterRes"
                },
                {
                    "type": "object",
                    "required": [
                        "batchSize",
                        "dataSourceID",
                        "table",
                        "type"
                    ],
                    "properties": {
                        "batchSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "catalog": {
                            "type": "string"
                        },
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "deleteTableContent": {
                            "type": "boolean"
                        },
                        "exportInternalFields": {
                            "type": "boolean"
                        },
                        "exportOnlyMappings": {
                            "type": "boolean"
                        },
                        "mappings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Mapping"
                            }
                        },
                        "oneTransaction": {
                            "type": "boolean"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rollbackIfError": {
                            "type": "boolean"
                        },
                        "schema": {
                            "type": "string"
                        },
                        "table": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        },
                        "updateTupleIfExists": {
                            "type": "boolean"
                        }
                    },
                    "title": "JDBCExporterRes"
                }
            ]
        },
        "JDBCSource": {
            "title": "JDBCSource",
            "allOf": [
                {
                    "$ref": "#/definitions/Source"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "nonParameterizedQuery",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonParameterizedQuery": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "JDBCSource"
                }
            ]
        },
        "JDBCSourceReq": {
            "title": "JDBCSource",
            "allOf": [
                {
                    "$ref": "#/definitions/SourceReq"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "nonParameterizedQuery",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonParameterizedQuery": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "JDBCSourceReq"
                }
            ]
        },
        "JDBCSourceRes": {
            "title": "JDBCSource",
            "allOf": [
                {
                    "$ref": "#/definitions/SourceRes"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "nonParameterizedQuery",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonParameterizedQuery": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "JDBCSourceRes"
                }
            ]
        },
        "JdbcTableLoadProcess": {
            "title": "JdbcTableLoadProcess",
            "allOf": [
                {
                    "$ref": "#/definitions/LoadProcess"
                },
                {
                    "type": "object",
                    "required": [
                        "loadProcessName",
                        "type",
                        "viewName"
                    ],
                    "properties": {
                        "customQuery": {
                            "type": "string"
                        },
                        "database": {
                            "type": "string"
                        },
                        "enableUpdateOnKeys": {
                            "type": "boolean"
                        },
                        "incrementalFieldName": {
                            "type": "string"
                        },
                        "loadProcessName": {
                            "type": "string"
                        },
                        "queryConditions": {
                            "type": "string"
                        },
                        "queryOptions": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "JDBCTable",
                                "Summary"
                            ]
                        },
                        "updateOnKeys": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "view": {
                            "type": "string"
                        },
                        "viewName": {
                            "type": "string"
                        }
                    },
                    "title": "JdbcTableLoadProcess"
                }
            ]
        },
        "JdbcTableLoadProcessReq": {
            "title": "JdbcTableLoadProcess",
            "allOf": [
                {
                    "$ref": "#/definitions/LoadProcessReq"
                },
                {
                    "type": "object",
                    "required": [
                        "loadProcessName",
                        "type",
                        "viewName"
                    ],
                    "properties": {
                        "customQuery": {
                            "type": "string"
                        },
                        "database": {
                            "type": "string"
                        },
                        "enableUpdateOnKeys": {
                            "type": "boolean"
                        },
                        "incrementalFieldName": {
                            "type": "string"
                        },
                        "loadProcessName": {
                            "type": "string"
                        },
                        "queryConditions": {
                            "type": "string"
                        },
                        "queryOptions": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "JDBCTable",
                                "Summary"
                            ]
                        },
                        "updateOnKeys": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "view": {
                            "type": "string"
                        },
                        "viewName": {
                            "type": "string"
                        }
                    },
                    "title": "JdbcTableLoadProcessReq"
                }
            ]
        },
        "JdbcTableLoadProcessRes": {
            "title": "JdbcTableLoadProcess",
            "allOf": [
                {
                    "$ref": "#/definitions/LoadProcessRes"
                },
                {
                    "type": "object",
                    "required": [
                        "loadProcessName",
                        "type",
                        "viewName"
                    ],
                    "properties": {
                        "customQuery": {
                            "type": "string"
                        },
                        "database": {
                            "type": "string"
                        },
                        "enableUpdateOnKeys": {
                            "type": "boolean"
                        },
                        "incrementalFieldName": {
                            "type": "string"
                        },
                        "loadProcessName": {
                            "type": "string"
                        },
                        "queryConditions": {
                            "type": "string"
                        },
                        "queryOptions": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "JDBCTable",
                                "Summary"
                            ]
                        },
                        "updateOnKeys": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "view": {
                            "type": "string"
                        },
                        "viewName": {
                            "type": "string"
                        }
                    },
                    "title": "JdbcTableLoadProcessRes"
                }
            ]
        },
        "Job": {
            "type": "object",
            "properties": {
                "jobConfigurationData": {
                    "$ref": "#/definitions/JobConfigurationData"
                }
            },
            "title": "Job"
        },
        "JobConfigurationData": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "draft": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer",
                    "format": "int32"
                },
                "projectName": {
                    "type": "string"
                }
            },
            "title": "JobConfigurationData"
        },
        "JobInformation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer",
                    "format": "int32"
                },
                "projectName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "JobInformation"
        },
        "JobReq": {
            "type": "object",
            "title": "JobReq"
        },
        "JobRes": {
            "type": "object",
            "properties": {
                "jobConfigurationData": {
                    "$ref": "#/definitions/JobConfigurationData"
                }
            },
            "title": "JobRes"
        },
        "JobStatusInformation": {
            "type": "object",
            "properties": {
                "combinations": {
                    "$ref": "#/definitions/Serializable"
                },
                "exportationErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "exportationGlobalResult": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "exportationResult": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "exportationWarnings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "exportersWithUnknownExportedTuples": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "extractionErrors": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractionGlobalResult": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractionResult": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractionWarnings": {
                    "type": "integer",
                    "format": "int64"
                },
                "firstExecution": {
                    "type": "integer",
                    "format": "int64"
                },
                "hasTuplesNotCachedInQueriedView": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "nextExecution": {
                    "type": "string",
                    "format": "date-time"
                },
                "parametersExecuted": {
                    "type": "integer",
                    "format": "int64"
                },
                "previousExecution": {
                    "type": "string",
                    "format": "date-time"
                },
                "projectId": {
                    "type": "integer",
                    "format": "int32"
                },
                "projectName": {
                    "type": "string"
                },
                "queryErrors": {
                    "$ref": "#/definitions/Serializable"
                },
                "querySuccess": {
                    "$ref": "#/definitions/Serializable"
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "ERROR",
                        "MISFIRED",
                        "NEVER_EXECUTED",
                        "STOPPED",
                        "WARNING"
                    ]
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryJob": {
                    "type": "boolean"
                },
                "startedWithState": {
                    "type": "boolean"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "DRAFT",
                        "NOT_RUNNING",
                        "RUNNING",
                        "WAITING"
                    ]
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "JobStatusInformation"
        },
        "KerberosConfiguration": {
            "type": "object",
            "properties": {
                "configFileContents": {
                    "type": "string",
                    "format": "byte"
                },
                "debug": {
                    "type": "boolean"
                },
                "kerberosConfigFile": {
                    "type": "string"
                },
                "keyTab": {
                    "type": "string"
                },
                "keyTabContents": {
                    "type": "string",
                    "format": "byte"
                },
                "principal": {
                    "type": "string"
                },
                "useKerberos": {
                    "type": "boolean"
                }
            },
            "title": "KerberosConfiguration"
        },
        "KerberosConfigurationDTO": {
            "type": "object",
            "properties": {
                "debug": {
                    "type": "boolean"
                },
                "kerberosConfigFile": {
                    "type": "string"
                },
                "keyTab": {
                    "type": "string"
                },
                "principal": {
                    "type": "string"
                },
                "useKerberos": {
                    "type": "boolean"
                }
            },
            "title": "KerberosConfigurationDTO"
        },
        "LicenseInfo": {
            "type": "object",
            "properties": {
                "licensee": {
                    "type": "string"
                },
                "subscriptionBundleType": {
                    "type": "string"
                }
            },
            "title": "LicenseInfo"
        },
        "ListSource": {
            "title": "ListSource",
            "allOf": [
                {
                    "$ref": "#/definitions/Source"
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "values"
                    ],
                    "properties": {
                        "separator": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        },
                        "values": {
                            "type": "string"
                        }
                    },
                    "title": "ListSource"
                }
            ]
        },
        "ListSourceReq": {
            "title": "ListSource",
            "allOf": [
                {
                    "$ref": "#/definitions/SourceReq"
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "values"
                    ],
                    "properties": {
                        "separator": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        },
                        "values": {
                            "type": "string"
                        }
                    },
                    "title": "ListSourceReq"
                }
            ]
        },
        "ListSourceRes": {
            "title": "ListSource",
            "allOf": [
                {
                    "$ref": "#/definitions/SourceRes"
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "values"
                    ],
                    "properties": {
                        "separator": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        },
                        "values": {
                            "type": "string"
                        }
                    },
                    "title": "ListSourceRes"
                }
            ]
        },
        "LoadProcess": {
            "type": "object",
            "required": [
                "loadProcessName",
                "type",
                "viewName"
            ],
            "properties": {
                "customQuery": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "enableUpdateOnKeys": {
                    "type": "boolean"
                },
                "loadProcessName": {
                    "type": "string"
                },
                "queryOptions": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "JDBCTable",
                        "Summary"
                    ]
                },
                "updateOnKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "view": {
                    "type": "string"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "LoadProcess"
        },
        "LoadProcessReq": {
            "type": "object",
            "required": [
                "loadProcessName",
                "type",
                "viewName"
            ],
            "properties": {
                "customQuery": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "enableUpdateOnKeys": {
                    "type": "boolean"
                },
                "loadProcessName": {
                    "type": "string"
                },
                "queryOptions": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "JDBCTable",
                        "Summary"
                    ]
                },
                "updateOnKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "view": {
                    "type": "string"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "LoadProcessReq"
        },
        "LoadProcessRes": {
            "type": "object",
            "required": [
                "loadProcessName",
                "type",
                "viewName"
            ],
            "properties": {
                "customQuery": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "enableUpdateOnKeys": {
                    "type": "boolean"
                },
                "loadProcessName": {
                    "type": "string"
                },
                "queryOptions": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "JDBCTable",
                        "Summary"
                    ]
                },
                "updateOnKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "view": {
                    "type": "string"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "LoadProcessRes"
        },
        "LoginSuccessDto": {
            "type": "object",
            "properties": {
                "authenticated": {
                    "type": "boolean"
                },
                "authenticatedBy": {
                    "type": "string"
                },
                "connectedUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kerberosEnabled": {
                    "type": "boolean"
                },
                "localAuth": {
                    "type": "boolean"
                },
                "permissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/RoleInfo"
                    }
                },
                "schedulerIndexConnectInfo": {
                    "$ref": "#/definitions/SchedulerIndexConnectionInfo"
                },
                "schedulerMode": {
                    "type": "string"
                },
                "serverData": {
                    "$ref": "#/definitions/ServerData"
                },
                "ssoEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "webAuth": {
                    "type": "boolean"
                }
            },
            "title": "LoginSuccessDto"
        },
        "MailConfigurationReq": {
            "type": "object",
            "required": [
                "from",
                "smtpServer",
                "subject"
            ],
            "properties": {
                "debug": {
                    "type": "boolean"
                },
                "enableTLS": {
                    "type": "boolean"
                },
                "from": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "SMTP",
                        "SMTPS"
                    ]
                },
                "smtpPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "smtpServer": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "trustServers": {
                    "type": "string"
                }
            },
            "title": "MailConfigurationReq"
        },
        "MailConfigurationRes": {
            "type": "object",
            "required": [
                "from",
                "smtpServer",
                "subject"
            ],
            "properties": {
                "debug": {
                    "type": "boolean"
                },
                "enableTLS": {
                    "type": "boolean"
                },
                "from": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "SMTP",
                        "SMTPS"
                    ]
                },
                "smtpPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "smtpServer": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "trustServers": {
                    "type": "string"
                }
            },
            "title": "MailConfigurationRes"
        },
        "MailHandler": {
            "title": "MailHandler",
            "allOf": [
                {
                    "$ref": "#/definitions/Handler"
                },
                {
                    "type": "object",
                    "required": [
                        "mailAddresses",
                        "send",
                        "type"
                    ],
                    "properties": {
                        "handleOnlyOnLastRetry": {
                            "type": "boolean"
                        },
                        "mailAddresses": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "send": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ALWAYS",
                                    "IF_ERRORS",
                                    "IF_EXPORTED_LESS_THAN_THRESHOLD",
                                    "IF_EXPORTED_MORE_THAN_THRESHOLD",
                                    "IF_MISFIRE"
                                ]
                            }
                        },
                        "threshold": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "thresholdMore": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Custom",
                                "mail",
                                "retry"
                            ]
                        }
                    },
                    "title": "MailHandler"
                }
            ]
        },
        "MailHandlerReq": {
            "title": "MailHandler",
            "allOf": [
                {
                    "$ref": "#/definitions/HandlerReq"
                },
                {
                    "type": "object",
                    "required": [
                        "mailAddresses",
                        "send",
                        "type"
                    ],
                    "properties": {
                        "handleOnlyOnLastRetry": {
                            "type": "boolean"
                        },
                        "mailAddresses": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "send": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ALWAYS",
                                    "IF_ERRORS",
                                    "IF_EXPORTED_LESS_THAN_THRESHOLD",
                                    "IF_EXPORTED_MORE_THAN_THRESHOLD",
                                    "IF_MISFIRE"
                                ]
                            }
                        },
                        "threshold": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "thresholdMore": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Custom",
                                "mail",
                                "retry"
                            ]
                        }
                    },
                    "title": "MailHandlerReq"
                }
            ]
        },
        "MailHandlerRes": {
            "title": "MailHandler",
            "allOf": [
                {
                    "$ref": "#/definitions/HandlerRes"
                },
                {
                    "type": "object",
                    "required": [
                        "mailAddresses",
                        "send",
                        "type"
                    ],
                    "properties": {
                        "handleOnlyOnLastRetry": {
                            "type": "boolean"
                        },
                        "mailAddresses": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "send": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ALWAYS",
                                    "IF_ERRORS",
                                    "IF_EXPORTED_LESS_THAN_THRESHOLD",
                                    "IF_EXPORTED_MORE_THAN_THRESHOLD",
                                    "IF_MISFIRE"
                                ]
                            }
                        },
                        "threshold": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "thresholdMore": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Custom",
                                "mail",
                                "retry"
                            ]
                        }
                    },
                    "title": "MailHandlerRes"
                }
            ]
        },
        "Mapping": {
            "type": "object",
            "required": [
                "documentField",
                "tableColumn"
            ],
            "properties": {
                "documentField": {
                    "type": "string"
                },
                "tableColumn": {
                    "type": "string"
                }
            },
            "title": "Mapping"
        },
        "MetaConfig": {
            "type": "object",
            "required": [
                "className",
                "parameters",
                "subType",
                "type"
            ],
            "properties": {
                "className": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetaParameter"
                    }
                },
                "subType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "MetaConfig"
        },
        "MetaParameter": {
            "type": "object",
            "properties": {
                "allowedReferences": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetaParameter"
                    }
                },
                "defaultConfiguration": {
                    "$ref": "#/definitions/DefaultConfiguration«object»"
                },
                "displayName": {
                    "type": "string"
                },
                "environmentDependent": {
                    "type": "boolean"
                },
                "helpText": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "mandatory": {
                    "type": "boolean"
                },
                "multivalued": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            },
            "title": "MetaParameter"
        },
        "Pagination«AbstractReport»": {
            "type": "object",
            "required": [
                "hasMore",
                "list",
                "total"
            ],
            "properties": {
                "hasMore": {
                    "type": "boolean"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AbstractReport"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Pagination«AbstractReport»"
        },
        "Pagination«SummaryReport»": {
            "type": "object",
            "required": [
                "hasMore",
                "list",
                "total"
            ],
            "properties": {
                "hasMore": {
                    "type": "boolean"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SummaryReport"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Pagination«SummaryReport»"
        },
        "Pair«string,boolean»": {
            "type": "object",
            "properties": {
                "first": {
                    "type": "string"
                },
                "s": {
                    "type": "boolean"
                },
                "second": {
                    "type": "boolean"
                },
                "t": {
                    "type": "string"
                }
            },
            "title": "Pair«string,boolean»"
        },
        "PluginInfo": {
            "type": "object",
            "properties": {
                "core": {
                    "type": "boolean"
                },
                "jarFile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pluginClass": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "PluginInfo"
        },
        "Project": {
            "type": "object",
            "required": [
                "projectDetails"
            ],
            "properties": {
                "dataSources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataSource"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job"
                    }
                },
                "projectDetails": {
                    "$ref": "#/definitions/ProjectDetails"
                }
            },
            "title": "Project"
        },
        "ProjectDetails": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "ProjectDetails"
        },
        "ProjectPermissions": {
            "type": "object",
            "properties": {
                "generalProjectPermissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "CREATE",
                            "READ",
                            "WRITE"
                        ]
                    }
                },
                "jobPermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ADMIN",
                                "CREATE",
                                "READ",
                                "WRITE"
                            ]
                        }
                    }
                },
                "projectID": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ProjectPermissions"
        },
        "ProjectPermsReq": {
            "type": "object",
            "properties": {
                "generalProjectPermissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "CREATE",
                            "READ",
                            "WRITE"
                        ]
                    }
                },
                "jobPermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ADMIN",
                                "CREATE",
                                "READ",
                                "WRITE"
                            ]
                        }
                    }
                },
                "projectID": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ProjectPermsReq"
        },
        "ProjectPermsRes": {
            "type": "object",
            "properties": {
                "generalProjectPermissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "CREATE",
                            "READ",
                            "WRITE"
                        ]
                    }
                },
                "jobPermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ADMIN",
                                "CREATE",
                                "READ",
                                "WRITE"
                            ]
                        }
                    }
                },
                "projectID": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ProjectPermsRes"
        },
        "QueryErrorLog": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "includeOnlyLastRetry": {
                    "type": "boolean"
                },
                "output": {
                    "type": "string"
                }
            },
            "title": "QueryErrorLog"
        },
        "ReportConfig": {
            "type": "object",
            "properties": {
                "maxIndividualReports": {
                    "type": "integer",
                    "format": "int32"
                },
                "queryErrorLog": {
                    "$ref": "#/definitions/QueryErrorLog"
                },
                "reportOnlyErrors": {
                    "type": "boolean"
                }
            },
            "title": "ReportConfig"
        },
        "ReportExportedDocs": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "errorsCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "resources": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "resourcesCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "unknownExportedTuples": {
                    "type": "boolean"
                },
                "warningsCount": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "ReportExportedDocs"
        },
        "ReportExtractedDocs": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "errorsCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "warningsCount": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "ReportExtractedDocs"
        },
        "ReportSection": {
            "type": "object",
            "properties": {
                "reportConfig": {
                    "$ref": "#/definitions/ReportConfig"
                }
            },
            "title": "ReportSection"
        },
        "Retry": {
            "type": "object",
            "required": [
                "repeat",
                "retryType"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "repeat": {
                    "type": "string",
                    "enum": [
                        "CONFIGURED_COUNT",
                        "WHILE_ERRORS"
                    ]
                },
                "restart": {
                    "type": "string",
                    "enum": [
                        "CONFIGURED_TIMEOUT",
                        "IMMEDIATELY"
                    ]
                },
                "retryType": {
                    "type": "string",
                    "enum": [
                        "IF_ERRORS",
                        "IF_EXPORTED_LESS_THAN_THRESHOLD",
                        "ONLY_QUERY_ERRORS"
                    ]
                },
                "threshold": {
                    "type": "integer",
                    "format": "int32"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "Retry"
        },
        "RetryReq": {
            "type": "object",
            "required": [
                "repeat",
                "retryType"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "repeat": {
                    "type": "string",
                    "enum": [
                        "CONFIGURED_COUNT",
                        "WHILE_ERRORS"
                    ]
                },
                "restart": {
                    "type": "string",
                    "enum": [
                        "CONFIGURED_TIMEOUT",
                        "IMMEDIATELY"
                    ]
                },
                "retryType": {
                    "type": "string",
                    "enum": [
                        "IF_ERRORS",
                        "IF_EXPORTED_LESS_THAN_THRESHOLD",
                        "ONLY_QUERY_ERRORS"
                    ]
                },
                "threshold": {
                    "type": "integer",
                    "format": "int32"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "RetryReq"
        },
        "RetryRes": {
            "type": "object",
            "required": [
                "repeat",
                "retryType"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "repeat": {
                    "type": "string",
                    "enum": [
                        "CONFIGURED_COUNT",
                        "WHILE_ERRORS"
                    ]
                },
                "restart": {
                    "type": "string",
                    "enum": [
                        "CONFIGURED_TIMEOUT",
                        "IMMEDIATELY"
                    ]
                },
                "retryType": {
                    "type": "string",
                    "enum": [
                        "IF_ERRORS",
                        "IF_EXPORTED_LESS_THAN_THRESHOLD",
                        "ONLY_QUERY_ERRORS"
                    ]
                },
                "threshold": {
                    "type": "integer",
                    "format": "int32"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "RetryRes"
        },
        "RetrySection": {
            "type": "object",
            "properties": {
                "retry": {
                    "$ref": "#/definitions/Retry"
                }
            },
            "title": "RetrySection"
        },
        "RetrySectionReq": {
            "type": "object",
            "properties": {
                "retry": {
                    "$ref": "#/definitions/RetryReq"
                }
            },
            "title": "RetrySectionReq"
        },
        "RetrySectionRes": {
            "type": "object",
            "properties": {
                "retry": {
                    "$ref": "#/definitions/RetryRes"
                }
            },
            "title": "RetrySectionRes"
        },
        "RoleData": {
            "type": "object",
            "properties": {
                "erasable": {
                    "type": "boolean"
                },
                "roleDesc": {
                    "type": "string"
                },
                "roleName": {
                    "type": "string"
                },
                "updateable": {
                    "type": "boolean"
                }
            },
            "title": "RoleData"
        },
        "RoleInfo": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/RolePermissions"
                },
                "roleData": {
                    "$ref": "#/definitions/RoleData"
                }
            },
            "title": "RoleInfo"
        },
        "RolePermissions": {
            "type": "object",
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "generalPermissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "CREATE",
                            "READ",
                            "WRITE"
                        ]
                    }
                },
                "projectPermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ProjectPermissions"
                    }
                }
            },
            "title": "RolePermissions"
        },
        "RolePermsReq": {
            "type": "object",
            "properties": {
                "generalPermissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "CREATE",
                            "READ",
                            "WRITE"
                        ]
                    }
                },
                "projectPermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ProjectPermsReq"
                    }
                }
            },
            "title": "RolePermsReq"
        },
        "RolePermsRes": {
            "type": "object",
            "properties": {
                "generalPermissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "CREATE",
                            "READ",
                            "WRITE"
                        ]
                    }
                },
                "projectPermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ProjectPermsRes"
                    }
                }
            },
            "title": "RolePermsRes"
        },
        "RoleReq": {
            "type": "object",
            "required": [
                "permissions",
                "roleName"
            ],
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/RolePermsReq"
                },
                "roleName": {
                    "type": "string"
                }
            },
            "title": "RoleReq"
        },
        "RoleRes": {
            "type": "object",
            "required": [
                "permissions",
                "roleName"
            ],
            "properties": {
                "erasable": {
                    "type": "boolean"
                },
                "permissions": {
                    "$ref": "#/definitions/RolePermsRes"
                },
                "roleDesc": {
                    "type": "string"
                },
                "roleName": {
                    "type": "string"
                },
                "updateable": {
                    "type": "boolean"
                }
            },
            "title": "RoleRes"
        },
        "SchedulerIndexConnectionInfo": {
            "type": "object",
            "required": [
                "host",
                "port",
                "user"
            ],
            "properties": {
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "SchedulerIndexConnectionInfo"
        },
        "SchedulerIndexExporter": {
            "title": "SchedulerIndexExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/Exporter"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "index",
                        "type"
                    ],
                    "properties": {
                        "clearIndex": {
                            "type": "boolean"
                        },
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "index": {
                            "type": "string"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        }
                    },
                    "title": "SchedulerIndexExporter"
                }
            ]
        },
        "SchedulerIndexExporterReq": {
            "title": "SchedulerIndexExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/ExporterReq"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "index",
                        "type"
                    ],
                    "properties": {
                        "clearIndex": {
                            "type": "boolean"
                        },
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "index": {
                            "type": "string"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        }
                    },
                    "title": "SchedulerIndexExporterReq"
                }
            ]
        },
        "SchedulerIndexExporterRes": {
            "title": "SchedulerIndexExporter",
            "allOf": [
                {
                    "$ref": "#/definitions/ExporterRes"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "index",
                        "type"
                    ],
                    "properties": {
                        "clearIndex": {
                            "type": "boolean"
                        },
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "index": {
                            "type": "string"
                        },
                        "originalIndex": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Custom",
                                "Elasticsearch",
                                "JDBC",
                                "Scheduler-Index"
                            ]
                        }
                    },
                    "title": "SchedulerIndexExporterRes"
                }
            ]
        },
        "SchedulerMode": {
            "type": "object",
            "properties": {
                "schedulerMode": {
                    "type": "string"
                }
            },
            "title": "SchedulerMode"
        },
        "Serializable": {
            "type": "object",
            "title": "Serializable"
        },
        "ServerConfiguration": {
            "type": "object",
            "required": [
                "corePoolSize",
                "keepAliveTime",
                "maxPoolSize",
                "maxTasks"
            ],
            "properties": {
                "corePoolSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "keepAliveTime": {
                    "type": "integer",
                    "format": "int64"
                },
                "maxPoolSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxTasks": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ServerConfiguration"
        },
        "ServerData": {
            "type": "object",
            "properties": {
                "backendVersion": {
                    "$ref": "#/definitions/UpdateVersion"
                },
                "license": {
                    "$ref": "#/definitions/LicenseInfo"
                },
                "mode": {
                    "$ref": "#/definitions/SchedulerMode"
                },
                "successResourcesUrl": {
                    "type": "string"
                },
                "version": {
                    "$ref": "#/definitions/UpdateVersion"
                }
            },
            "title": "ServerData"
        },
        "ServerPortsConfiguration": {
            "type": "object",
            "required": [
                "port",
                "reservedPort",
                "shutdownPort"
            ],
            "properties": {
                "port": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1024,
                    "exclusiveMinimum": false
                },
                "reservedPort": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1024,
                    "exclusiveMinimum": false
                },
                "shutdownPort": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1024,
                    "exclusiveMinimum": false
                }
            },
            "title": "ServerPortsConfiguration"
        },
        "SimpleField": {
            "title": "SimpleField",
            "allOf": [
                {
                    "$ref": "#/definitions/Field«object»"
                },
                {
                    "type": "object",
                    "properties": {
                        "hidden": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "compoundField",
                                "simpleField"
                            ]
                        },
                        "values": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "title": "SimpleField"
                }
            ]
        },
        "Source": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "csv",
                        "database",
                        "jdbc",
                        "list",
                        "vdp"
                    ]
                }
            },
            "title": "Source"
        },
        "SourceReq": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "csv",
                        "database",
                        "jdbc",
                        "list",
                        "vdp"
                    ]
                }
            },
            "title": "SourceReq"
        },
        "SourceRes": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "csv",
                        "database",
                        "jdbc",
                        "list",
                        "vdp"
                    ]
                }
            },
            "title": "SourceRes"
        },
        "SummaryLoadProcess": {
            "title": "SummaryLoadProcess",
            "allOf": [
                {
                    "$ref": "#/definitions/LoadProcess"
                },
                {
                    "type": "object",
                    "required": [
                        "loadProcessName",
                        "type",
                        "viewName"
                    ],
                    "properties": {
                        "customQuery": {
                            "type": "string"
                        },
                        "database": {
                            "type": "string"
                        },
                        "enableUpdateOnKeys": {
                            "type": "boolean"
                        },
                        "loadProcessName": {
                            "type": "string"
                        },
                        "queryOptions": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "JDBCTable",
                                "Summary"
                            ]
                        },
                        "updateOnKeys": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "view": {
                            "type": "string"
                        },
                        "viewName": {
                            "type": "string"
                        }
                    },
                    "title": "SummaryLoadProcess"
                }
            ]
        },
        "SummaryLoadProcessReq": {
            "title": "SummaryLoadProcess",
            "allOf": [
                {
                    "$ref": "#/definitions/LoadProcessReq"
                },
                {
                    "type": "object",
                    "required": [
                        "loadProcessName",
                        "type",
                        "viewName"
                    ],
                    "properties": {
                        "customQuery": {
                            "type": "string"
                        },
                        "database": {
                            "type": "string"
                        },
                        "enableUpdateOnKeys": {
                            "type": "boolean"
                        },
                        "loadProcessName": {
                            "type": "string"
                        },
                        "queryOptions": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "JDBCTable",
                                "Summary"
                            ]
                        },
                        "updateOnKeys": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "view": {
                            "type": "string"
                        },
                        "viewName": {
                            "type": "string"
                        }
                    },
                    "title": "SummaryLoadProcessReq"
                }
            ]
        },
        "SummaryLoadProcessRes": {
            "title": "SummaryLoadProcess",
            "allOf": [
                {
                    "$ref": "#/definitions/LoadProcessRes"
                },
                {
                    "type": "object",
                    "required": [
                        "loadProcessName",
                        "type",
                        "viewName"
                    ],
                    "properties": {
                        "customQuery": {
                            "type": "string"
                        },
                        "database": {
                            "type": "string"
                        },
                        "enableUpdateOnKeys": {
                            "type": "boolean"
                        },
                        "loadProcessName": {
                            "type": "string"
                        },
                        "queryOptions": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "JDBCTable",
                                "Summary"
                            ]
                        },
                        "updateOnKeys": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "view": {
                            "type": "string"
                        },
                        "viewName": {
                            "type": "string"
                        }
                    },
                    "title": "SummaryLoadProcessRes"
                }
            ]
        },
        "SummaryReport": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "exportedDocs": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ReportExportedDocs"
                    }
                },
                "extractedDocs": {
                    "$ref": "#/definitions/ReportExtractedDocs"
                },
                "extractionDataSourceName": {
                    "type": "string"
                },
                "globalErrors": {
                    "type": "integer",
                    "format": "int32"
                },
                "globalWarnings": {
                    "type": "integer",
                    "format": "int32"
                },
                "hasIndividualDetails": {
                    "type": "boolean"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "misfireError": {
                    "type": "string"
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "ERROR",
                        "MISFIRED",
                        "NEVER_EXECUTED",
                        "STOPPED",
                        "WARNING"
                    ]
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "SummaryReport"
        },
        "Trigger": {
            "type": "object",
            "required": [
                "cronExpression"
            ],
            "properties": {
                "cronExpression": {
                    "type": "string"
                },
                "dependencyInfo": {
                    "$ref": "#/definitions/Dependency"
                },
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "cron"
                    ]
                }
            },
            "title": "Trigger"
        },
        "TriggerReq": {
            "type": "object",
            "required": [
                "cronExpression"
            ],
            "properties": {
                "cronExpression": {
                    "type": "string"
                },
                "dependencyInfo": {
                    "$ref": "#/definitions/Dependency"
                },
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "cron"
                    ]
                }
            },
            "title": "TriggerReq"
        },
        "TriggerRes": {
            "type": "object",
            "required": [
                "cronExpression"
            ],
            "properties": {
                "cronExpression": {
                    "type": "string"
                },
                "dependencyInfo": {
                    "$ref": "#/definitions/Dependency"
                },
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "cron"
                    ]
                }
            },
            "title": "TriggerRes"
        },
        "TriggerSection": {
            "type": "object",
            "properties": {
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Trigger"
                    }
                }
            },
            "title": "TriggerSection"
        },
        "TriggerSectionReq": {
            "type": "object",
            "properties": {
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TriggerReq"
                    }
                }
            },
            "title": "TriggerSectionReq"
        },
        "TriggerSectionRes": {
            "type": "object",
            "properties": {
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TriggerRes"
                    }
                }
            },
            "title": "TriggerSectionRes"
        },
        "UpdateVersion": {
            "type": "object",
            "properties": {
                "full": {
                    "type": "string"
                },
                "hotfix": {
                    "type": "integer",
                    "format": "int32"
                },
                "major": {
                    "type": "integer",
                    "format": "int32"
                },
                "minor": {
                    "type": "integer",
                    "format": "int32"
                },
                "update": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "UpdateVersion"
        },
        "VDPCacheExtractionSection": {
            "type": "object",
            "required": [
                "dataSourceID",
                "loadprocesses",
                "type"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "jobConcurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "loadprocesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CacheLoadProcess"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                }
            },
            "title": "VDPCacheExtractionSection"
        },
        "VDPCacheExtractionSectionReq": {
            "type": "object",
            "required": [
                "dataSourceID",
                "loadprocesses",
                "type"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "jobConcurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "loadprocesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CacheLoadProcessReq"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                }
            },
            "title": "VDPCacheExtractionSectionReq"
        },
        "VDPCacheExtractionSectionRes": {
            "type": "object",
            "required": [
                "dataSourceID",
                "loadprocesses",
                "type"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "jobConcurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "loadprocesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CacheLoadProcessRes"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                }
            },
            "title": "VDPCacheExtractionSectionRes"
        },
        "VDPCacheJob": {
            "title": "VDPCacheJob",
            "allOf": [
                {
                    "$ref": "#/definitions/Job"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPCacheExtractionSection"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSection"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySection"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSection"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPCacheJob",
                    "description": "VDP-Cache Job"
                }
            ],
            "description": "VDP-Cache Job"
        },
        "VDPCacheJobIndividualReport": {
            "type": "object",
            "properties": {
                "cacheErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cachedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "extractedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractorErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extractorWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handlerErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "initializationErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "misfireError": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "ERROR",
                        "MISFIRED",
                        "NEVER_EXECUTED",
                        "STOPPED",
                        "WARNING"
                    ]
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryJob": {
                    "type": "boolean"
                },
                "sourcesErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "tuplesNotCachedInQueriedView": {
                    "type": "boolean"
                }
            },
            "title": "VDPCacheJobIndividualReport",
            "description": "VDP Cache Job Individual Report"
        },
        "VDPCacheJobReport": {
            "title": "VDPCacheJobReport",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractReport"
                },
                {
                    "type": "object",
                    "properties": {
                        "cacheErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "cachedDocs": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "endTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "extractedDocs": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "extractionDataSourceName": {
                            "type": "string"
                        },
                        "extractorErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "extractorWarnings": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "firstTime": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "generalErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "generalWarnings": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "handlerErrors": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "hostnames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "initializationErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ips": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "jobID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "jobName": {
                            "type": "string"
                        },
                        "jobType": {
                            "type": "string"
                        },
                        "misfireError": {
                            "type": "string"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "query": {
                            "type": "string"
                        },
                        "reports": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VDPCacheLoadProcessReport"
                            }
                        },
                        "result": {
                            "type": "string",
                            "enum": [
                                "COMPLETE",
                                "ERROR",
                                "MISFIRED",
                                "NEVER_EXECUTED",
                                "STOPPED",
                                "WARNING"
                            ]
                        },
                        "retryCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "retryJob": {
                            "type": "boolean"
                        },
                        "sourcesErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "startTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "tuplesNotCachedInQueriedView": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPCacheJobReport",
                    "description": "VDP Cache Job Report"
                }
            ],
            "description": "VDP Cache Job Report"
        },
        "VDPCacheJobReq": {
            "title": "VDPCacheJob",
            "allOf": [
                {
                    "$ref": "#/definitions/JobReq"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPCacheExtractionSectionReq"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSectionReq"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySectionReq"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSectionReq"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPCacheJobReq",
                    "description": "VDP-Cache Job"
                }
            ],
            "description": "VDP-Cache Job"
        },
        "VDPCacheJobRes": {
            "title": "VDPCacheJob",
            "allOf": [
                {
                    "$ref": "#/definitions/JobRes"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPCacheExtractionSectionRes"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSectionRes"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySectionRes"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSectionRes"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPCacheJobRes",
                    "description": "VDP-Cache Job"
                }
            ],
            "description": "VDP-Cache Job"
        },
        "VDPCacheLoadProcessReport": {
            "type": "object",
            "properties": {
                "cacheErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cachedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "extractedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractorErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extractorWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handlerErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "initializationErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "loadProcessName": {
                    "type": "string"
                },
                "misfireError": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VDPCacheJobIndividualReport"
                    }
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "ERROR",
                        "MISFIRED",
                        "NEVER_EXECUTED",
                        "STOPPED",
                        "WARNING"
                    ]
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryJob": {
                    "type": "boolean"
                },
                "sourcesErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "tuplesNotCachedInQueriedView": {
                    "type": "boolean"
                }
            },
            "title": "VDPCacheLoadProcessReport",
            "description": "VDP Cache Load Process Report"
        },
        "VDPDataLoadExtractionSection": {
            "type": "object",
            "required": [
                "dataSourceID",
                "loadprocesses",
                "type"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "jobConcurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "loadprocesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoadProcess"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                }
            },
            "title": "VDPDataLoadExtractionSection"
        },
        "VDPDataLoadExtractionSectionReq": {
            "type": "object",
            "required": [
                "dataSourceID",
                "loadprocesses",
                "type"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "jobConcurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "loadprocesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoadProcessReq"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                }
            },
            "title": "VDPDataLoadExtractionSectionReq"
        },
        "VDPDataLoadExtractionSectionRes": {
            "type": "object",
            "required": [
                "dataSourceID",
                "loadprocesses",
                "type"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "jobConcurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "loadprocesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoadProcessRes"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                }
            },
            "title": "VDPDataLoadExtractionSectionRes"
        },
        "VDPDataLoadJob": {
            "title": "VDPDataLoadJob",
            "allOf": [
                {
                    "$ref": "#/definitions/Job"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPDataLoadExtractionSection"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSection"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySection"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSection"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPDataLoadJob",
                    "description": "VDP-DataLoad Job"
                }
            ],
            "description": "VDP-DataLoad Job"
        },
        "VDPDataLoadJobIndividualReport": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "extractedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractorErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extractorWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handlerErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "initializationErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "insertErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "insertedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "misfireError": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "ERROR",
                        "MISFIRED",
                        "NEVER_EXECUTED",
                        "STOPPED",
                        "WARNING"
                    ]
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryJob": {
                    "type": "boolean"
                },
                "sourcesErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "VDPDataLoadJobIndividualReport",
            "description": "VDP Data Load Job Individual Report"
        },
        "VDPDataLoadJobReport": {
            "title": "VDPDataLoadJobReport",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractReport"
                },
                {
                    "type": "object",
                    "properties": {
                        "endTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "extractedDocs": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "extractionDataSourceName": {
                            "type": "string"
                        },
                        "extractorErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "extractorWarnings": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "firstTime": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "generalErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "generalWarnings": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "handlerErrors": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "hostnames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "initializationErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "insertErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "insertedDocs": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "ips": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "jobID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "jobName": {
                            "type": "string"
                        },
                        "jobType": {
                            "type": "string"
                        },
                        "misfireError": {
                            "type": "string"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "query": {
                            "type": "string"
                        },
                        "reports": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VDPDataLoadProcessReport"
                            }
                        },
                        "result": {
                            "type": "string",
                            "enum": [
                                "COMPLETE",
                                "ERROR",
                                "MISFIRED",
                                "NEVER_EXECUTED",
                                "STOPPED",
                                "WARNING"
                            ]
                        },
                        "retryCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "retryJob": {
                            "type": "boolean"
                        },
                        "sourcesErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "startTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPDataLoadJobReport",
                    "description": "VDP Data Load Job Report"
                }
            ],
            "description": "VDP Data Load Job Report"
        },
        "VDPDataLoadJobReq": {
            "title": "VDPDataLoadJob",
            "allOf": [
                {
                    "$ref": "#/definitions/JobReq"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPDataLoadExtractionSectionReq"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSectionReq"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySectionReq"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSectionReq"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPDataLoadJobReq",
                    "description": "VDP-DataLoad Job"
                }
            ],
            "description": "VDP-DataLoad Job"
        },
        "VDPDataLoadJobRes": {
            "title": "VDPDataLoadJob",
            "allOf": [
                {
                    "$ref": "#/definitions/JobRes"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPDataLoadExtractionSectionRes"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSectionRes"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySectionRes"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSectionRes"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPDataLoadJobRes",
                    "description": "VDP-DataLoad Job"
                }
            ],
            "description": "VDP-DataLoad Job"
        },
        "VDPDataLoadProcessReport": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "extractedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractorErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extractorWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handlerErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "initializationErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "insertErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "insertedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "loadProcessName": {
                    "type": "string"
                },
                "misfireError": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VDPDataLoadJobIndividualReport"
                    }
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "ERROR",
                        "MISFIRED",
                        "NEVER_EXECUTED",
                        "STOPPED",
                        "WARNING"
                    ]
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryJob": {
                    "type": "boolean"
                },
                "sourcesErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "VDPDataLoadProcessReport",
            "description": "VDP Data Load Process Report"
        },
        "VDPDataSource": {
            "title": "VDPDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSource"
                },
                {
                    "type": "object",
                    "required": [
                        "chunkSize",
                        "chunkTimeout",
                        "connectionURI",
                        "login",
                        "name",
                        "queryTimeout"
                    ],
                    "properties": {
                        "chunkSize": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "chunkTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "connectionURI": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "poolEnabled": {
                            "type": "boolean"
                        },
                        "poolExhaustedAction": {
                            "type": "string",
                            "format": "byte"
                        },
                        "poolInitSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolInitialCapacityPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxActive": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxSleepingPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxWait": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinEvidectableTime": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolNumTestPerEviction": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolPreparedStatements": {
                            "type": "boolean"
                        },
                        "poolTestOnBorrow": {
                            "type": "boolean"
                        },
                        "poolTestOnReturn": {
                            "type": "boolean"
                        },
                        "poolTestWhileIdle": {
                            "type": "boolean"
                        },
                        "poolTimeBetweenEviction": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolValidationQuery": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "queryTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        },
                        "useKerberos": {
                            "type": "boolean"
                        }
                    },
                    "title": "VDPDataSource",
                    "description": "VDP DataSource"
                }
            ],
            "description": "VDP DataSource"
        },
        "VDPDataSourceConfiguration": {
            "type": "object",
            "required": [
                "serverHost",
                "serverPort"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "serverHost": {
                    "type": "string"
                },
                "serverPort": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1024,
                    "exclusiveMinimum": false
                }
            },
            "title": "VDPDataSourceConfiguration"
        },
        "VDPDataSourceReq": {
            "title": "VDPDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSourceReq"
                },
                {
                    "type": "object",
                    "required": [
                        "chunkSize",
                        "chunkTimeout",
                        "connectionURI",
                        "login",
                        "name",
                        "password",
                        "queryTimeout"
                    ],
                    "properties": {
                        "chunkSize": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "chunkTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "connectionURI": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "poolEnabled": {
                            "type": "boolean"
                        },
                        "poolExhaustedAction": {
                            "type": "string",
                            "format": "byte"
                        },
                        "poolInitSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolInitialCapacityPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxActive": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxSleepingPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxWait": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinEvidectableTime": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolNumTestPerEviction": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolPreparedStatements": {
                            "type": "boolean"
                        },
                        "poolTestOnBorrow": {
                            "type": "boolean"
                        },
                        "poolTestOnReturn": {
                            "type": "boolean"
                        },
                        "poolTestWhileIdle": {
                            "type": "boolean"
                        },
                        "poolTimeBetweenEviction": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolValidationQuery": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "queryTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        },
                        "useKerberos": {
                            "type": "boolean"
                        }
                    },
                    "title": "VDPDataSourceReq",
                    "description": "VDP DataSource"
                }
            ],
            "description": "VDP DataSource"
        },
        "VDPDataSourceRes": {
            "title": "VDPDataSource",
            "allOf": [
                {
                    "$ref": "#/definitions/DataSourceRes"
                },
                {
                    "type": "object",
                    "required": [
                        "chunkSize",
                        "chunkTimeout",
                        "connectionURI",
                        "login",
                        "name",
                        "queryTimeout"
                    ],
                    "properties": {
                        "chunkSize": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "chunkTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "connectionURI": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "poolEnabled": {
                            "type": "boolean"
                        },
                        "poolExhaustedAction": {
                            "type": "string",
                            "format": "byte"
                        },
                        "poolInitSize": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolInitialCapacityPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxActive": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxSleepingPreparedStatements": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolMaxWait": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinEvidectableTime": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolMinIdle": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolNumTestPerEviction": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "poolPreparedStatements": {
                            "type": "boolean"
                        },
                        "poolTestOnBorrow": {
                            "type": "boolean"
                        },
                        "poolTestOnReturn": {
                            "type": "boolean"
                        },
                        "poolTestWhileIdle": {
                            "type": "boolean"
                        },
                        "poolTimeBetweenEviction": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "poolValidationQuery": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "queryTimeout": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "CSV",
                                "Elasticsearch",
                                "ElasticsearchRest",
                                "JDBC",
                                "Scheduler-Index",
                                "UNKNOWN",
                                "VDP"
                            ]
                        },
                        "useKerberos": {
                            "type": "boolean"
                        }
                    },
                    "title": "VDPDataSourceRes",
                    "description": "VDP DataSource"
                }
            ],
            "description": "VDP DataSource"
        },
        "VDPExtractionSection": {
            "type": "object",
            "required": [
                "dataSourceID",
                "extractionData",
                "type"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "extractionData": {
                    "$ref": "#/definitions/CommonParametersExtractionData"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                }
            },
            "title": "VDPExtractionSection"
        },
        "VDPExtractionSectionReq": {
            "type": "object",
            "required": [
                "dataSourceID",
                "extractionData",
                "type"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "extractionData": {
                    "$ref": "#/definitions/CommonParametersExtractionDataReq"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                }
            },
            "title": "VDPExtractionSectionReq"
        },
        "VDPExtractionSectionRes": {
            "type": "object",
            "required": [
                "dataSourceID",
                "extractionData",
                "type"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "extractionData": {
                    "$ref": "#/definitions/CommonParametersExtractionDataRes"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                }
            },
            "title": "VDPExtractionSectionRes"
        },
        "VDPIndexerExtractionSection": {
            "type": "object",
            "required": [
                "dataSourceID",
                "type",
                "viewIndexingProcesses"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "incrementalIndexingStartDate": {
                    "type": "string"
                },
                "indexOnlyTextAndPKFields": {
                    "type": "boolean"
                },
                "jobConcurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxNumResultsPerView": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                },
                "viewIndexingProcesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ViewIndexingProcess"
                    }
                }
            },
            "title": "VDPIndexerExtractionSection"
        },
        "VDPIndexerExtractionSectionReq": {
            "type": "object",
            "required": [
                "dataSourceID",
                "type",
                "viewIndexingProcesses"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "incrementalIndexingStartDate": {
                    "type": "string"
                },
                "indexOnlyTextAndPKFields": {
                    "type": "boolean"
                },
                "jobConcurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxNumResultsPerView": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                },
                "viewIndexingProcesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ViewIndexingProcessReq"
                    }
                }
            },
            "title": "VDPIndexerExtractionSectionReq"
        },
        "VDPIndexerExtractionSectionRes": {
            "type": "object",
            "required": [
                "dataSourceID",
                "type",
                "viewIndexingProcesses"
            ],
            "properties": {
                "dataSourceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "incrementalIndexingStartDate": {
                    "type": "string"
                },
                "indexOnlyTextAndPKFields": {
                    "type": "boolean"
                },
                "jobConcurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxNumResultsPerView": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VDP",
                        "VDPCache",
                        "VDPDataLoad",
                        "VDPIndexer"
                    ]
                },
                "viewIndexingProcesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ViewIndexingProcessRes"
                    }
                }
            },
            "title": "VDPIndexerExtractionSectionRes"
        },
        "VDPIndexerJob": {
            "title": "VDPIndexerJob",
            "allOf": [
                {
                    "$ref": "#/definitions/Job"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "exportationSection": {
                            "$ref": "#/definitions/ExportationSection"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPIndexerExtractionSection"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSection"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySection"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSection"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPIndexerJob",
                    "description": "VDP-Indexer Job"
                }
            ],
            "description": "VDP-Indexer Job"
        },
        "VDPIndexerJobIndividualReport": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "exportedDocs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "exporterErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "exporterResources": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "exporterWarnings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "extractedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractedRows": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractorErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extractorWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handlerErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "initializationErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "misfireError": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "ERROR",
                        "MISFIRED",
                        "NEVER_EXECUTED",
                        "STOPPED",
                        "WARNING"
                    ]
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryJob": {
                    "type": "boolean"
                },
                "retryableExporterErrors": {
                    "type": "boolean"
                },
                "sourcesErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "VDPIndexerJobIndividualReport",
            "description": "VDP Indexer Job Individual Report"
        },
        "VDPIndexerJobReport": {
            "title": "VDPIndexerJobReport",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractReport"
                },
                {
                    "type": "object",
                    "properties": {
                        "endTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "exportedDocs": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        "exporterErrors": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "exporterResources": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "exporterWarnings": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "extractedDocs": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "extractedRows": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "extractionDataSourceName": {
                            "type": "string"
                        },
                        "extractorErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "extractorWarnings": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "firstTime": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "generalErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "generalWarnings": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "handlerErrors": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "hostnames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "initializationErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ips": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "jobID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "jobName": {
                            "type": "string"
                        },
                        "jobType": {
                            "type": "string"
                        },
                        "misfireError": {
                            "type": "string"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "query": {
                            "type": "string"
                        },
                        "reports": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VDPIndexerLoadProcessReport"
                            }
                        },
                        "result": {
                            "type": "string",
                            "enum": [
                                "COMPLETE",
                                "ERROR",
                                "MISFIRED",
                                "NEVER_EXECUTED",
                                "STOPPED",
                                "WARNING"
                            ]
                        },
                        "retryCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "retryJob": {
                            "type": "boolean"
                        },
                        "retryableExporterErrors": {
                            "type": "boolean"
                        },
                        "sourcesErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "startTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPIndexerJobReport",
                    "description": "VDP Indexer Job Report"
                }
            ],
            "description": "VDP Indexer Job Report"
        },
        "VDPIndexerJobReq": {
            "title": "VDPIndexerJob",
            "allOf": [
                {
                    "$ref": "#/definitions/JobReq"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "exportationSection": {
                            "$ref": "#/definitions/ExportationSectionReq"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPIndexerExtractionSectionReq"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSectionReq"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySectionReq"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSectionReq"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPIndexerJobReq",
                    "description": "VDP-Indexer Job"
                }
            ],
            "description": "VDP-Indexer Job"
        },
        "VDPIndexerJobRes": {
            "title": "VDPIndexerJob",
            "allOf": [
                {
                    "$ref": "#/definitions/JobRes"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "exportationSection": {
                            "$ref": "#/definitions/ExportationSectionRes"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPIndexerExtractionSectionRes"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSectionRes"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySectionRes"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSectionRes"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPIndexerJobRes",
                    "description": "VDP-Indexer Job"
                }
            ],
            "description": "VDP-Indexer Job"
        },
        "VDPIndexerLoadProcessReport": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "exportedDocs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "exporterErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "exporterResources": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "exporterWarnings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "extractedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractedRows": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractorErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extractorWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handlerErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "initializationErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "misfireError": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VDPIndexerJobIndividualReport"
                    }
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "ERROR",
                        "MISFIRED",
                        "NEVER_EXECUTED",
                        "STOPPED",
                        "WARNING"
                    ]
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryJob": {
                    "type": "boolean"
                },
                "retryableExporterErrors": {
                    "type": "boolean"
                },
                "sourcesErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "viewIndexingProcessName": {
                    "type": "string"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "VDPIndexerLoadProcessReport",
            "description": "VDP Indexer Load Process Report"
        },
        "VDPJob": {
            "title": "VDPJob",
            "allOf": [
                {
                    "$ref": "#/definitions/Job"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "exportationSection": {
                            "$ref": "#/definitions/ExportationSection"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPExtractionSection"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSection"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySection"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSection"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPJob",
                    "description": "VDP Job"
                }
            ],
            "description": "VDP Job"
        },
        "VDPJobIndividualReport": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "exportedDocs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "exporterErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "exporterResources": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "exporterWarnings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "extractedDocs": {
                    "type": "integer",
                    "format": "int64"
                },
                "extractorErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extractorWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generalWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handlerErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "initializationErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "misfireError": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "result": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "ERROR",
                        "MISFIRED",
                        "NEVER_EXECUTED",
                        "STOPPED",
                        "WARNING"
                    ]
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryJob": {
                    "type": "boolean"
                },
                "retryableExporterErrors": {
                    "type": "boolean"
                },
                "sourcesErrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "VDPJobIndividualReport",
            "description": "VDP Job Individual Report"
        },
        "VDPJobReport": {
            "title": "VDPJobReport",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractReport"
                },
                {
                    "type": "object",
                    "properties": {
                        "endTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "exportedDocs": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        "exporterErrors": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "exporterResources": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "exporterWarnings": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "extractedDocs": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "extractionDataSourceName": {
                            "type": "string"
                        },
                        "extractorErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "extractorWarnings": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "firstTime": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "generalErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "generalWarnings": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "handlerErrors": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "hostnames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "initializationErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ips": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "jobID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "jobName": {
                            "type": "string"
                        },
                        "jobType": {
                            "type": "string"
                        },
                        "misfireError": {
                            "type": "string"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "query": {
                            "type": "string"
                        },
                        "reports": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VDPJobIndividualReport"
                            }
                        },
                        "result": {
                            "type": "string",
                            "enum": [
                                "COMPLETE",
                                "ERROR",
                                "MISFIRED",
                                "NEVER_EXECUTED",
                                "STOPPED",
                                "WARNING"
                            ]
                        },
                        "retryCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "retryJob": {
                            "type": "boolean"
                        },
                        "retryableExporterErrors": {
                            "type": "boolean"
                        },
                        "sourcesErrors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "startTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPJobReport",
                    "description": "VDP Job Report"
                }
            ],
            "description": "VDP Job Report"
        },
        "VDPJobReq": {
            "title": "VDPJob",
            "allOf": [
                {
                    "$ref": "#/definitions/JobReq"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "exportationSection": {
                            "$ref": "#/definitions/ExportationSectionReq"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPExtractionSectionReq"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSectionReq"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySectionReq"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSectionReq"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPJobReq",
                    "description": "VDP Job"
                }
            ],
            "description": "VDP Job"
        },
        "VDPJobRes": {
            "title": "VDPJob",
            "allOf": [
                {
                    "$ref": "#/definitions/JobRes"
                },
                {
                    "type": "object",
                    "required": [
                        "extractionSection",
                        "name"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "draft": {
                            "type": "boolean"
                        },
                        "exportationSection": {
                            "$ref": "#/definitions/ExportationSectionRes"
                        },
                        "extractionSection": {
                            "$ref": "#/definitions/VDPExtractionSectionRes"
                        },
                        "handlerSection": {
                            "$ref": "#/definitions/HandlerSectionRes"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "projectId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "projectName": {
                            "type": "string"
                        },
                        "reportSection": {
                            "$ref": "#/definitions/ReportSection"
                        },
                        "retrySection": {
                            "$ref": "#/definitions/RetrySectionRes"
                        },
                        "triggerSection": {
                            "$ref": "#/definitions/TriggerSectionRes"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "UNKNOWN",
                                "VDP",
                                "VDPCache",
                                "VDPDataLoad",
                                "VDPIndexer"
                            ]
                        }
                    },
                    "title": "VDPJobRes",
                    "description": "VDP Job"
                }
            ],
            "description": "VDP Job"
        },
        "VDPSource": {
            "title": "VDPSource",
            "allOf": [
                {
                    "$ref": "#/definitions/Source"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "nonParameterizedQuery",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonParameterizedQuery": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "VDPSource"
                }
            ]
        },
        "VDPSourceReq": {
            "title": "VDPSource",
            "allOf": [
                {
                    "$ref": "#/definitions/SourceReq"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "nonParameterizedQuery",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonParameterizedQuery": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "VDPSourceReq"
                }
            ]
        },
        "VDPSourceRes": {
            "title": "VDPSource",
            "allOf": [
                {
                    "$ref": "#/definitions/SourceRes"
                },
                {
                    "type": "object",
                    "required": [
                        "dataSourceID",
                        "nonParameterizedQuery",
                        "type"
                    ],
                    "properties": {
                        "dataSourceID": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonParameterizedQuery": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "database",
                                "jdbc",
                                "list",
                                "vdp"
                            ]
                        }
                    },
                    "title": "VDPSourceRes"
                }
            ]
        },
        "VDPViewFields": {
            "type": "object",
            "properties": {
                "fieldNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mandatoryFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "VDPViewFields"
        },
        "ViewIndexingProcess": {
            "type": "object",
            "required": [
                "enableIncrementalIndexing",
                "viewIndexingProcessName",
                "viewName"
            ],
            "properties": {
                "advancedQueryFilter": {
                    "type": "string"
                },
                "concurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "database": {
                    "type": "string"
                },
                "enableIncrementalIndexing": {
                    "type": "boolean"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldSource"
                    }
                },
                "incrementalIndexingExpression": {
                    "type": "string"
                },
                "incrementalIndexingFieldName": {
                    "type": "string"
                },
                "incrementalIndexingStartDate": {
                    "type": "string"
                },
                "indexOnlyTextAndPKFields": {
                    "type": "boolean"
                },
                "maxIterations": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxNumResultsPerView": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderByExpression": {
                    "type": "string"
                },
                "sourcesNotChange": {
                    "type": "boolean"
                },
                "view": {
                    "type": "string"
                },
                "viewIndexingProcessName": {
                    "type": "string"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "ViewIndexingProcess"
        },
        "ViewIndexingProcessReq": {
            "type": "object",
            "required": [
                "enableIncrementalIndexing",
                "viewIndexingProcessName",
                "viewName"
            ],
            "properties": {
                "advancedQueryFilter": {
                    "type": "string"
                },
                "concurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "database": {
                    "type": "string"
                },
                "enableIncrementalIndexing": {
                    "type": "boolean"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldSourceReq"
                    }
                },
                "incrementalIndexingExpression": {
                    "type": "string"
                },
                "incrementalIndexingFieldName": {
                    "type": "string"
                },
                "incrementalIndexingStartDate": {
                    "type": "string"
                },
                "indexOnlyTextAndPKFields": {
                    "type": "boolean"
                },
                "maxIterations": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxNumResultsPerView": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderByExpression": {
                    "type": "string"
                },
                "sourcesNotChange": {
                    "type": "boolean"
                },
                "view": {
                    "type": "string"
                },
                "viewIndexingProcessName": {
                    "type": "string"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "ViewIndexingProcessReq"
        },
        "ViewIndexingProcessRes": {
            "type": "object",
            "required": [
                "enableIncrementalIndexing",
                "viewIndexingProcessName",
                "viewName"
            ],
            "properties": {
                "advancedQueryFilter": {
                    "type": "string"
                },
                "concurrencyLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "database": {
                    "type": "string"
                },
                "enableIncrementalIndexing": {
                    "type": "boolean"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldSourceRes"
                    }
                },
                "incrementalIndexingExpression": {
                    "type": "string"
                },
                "incrementalIndexingFieldName": {
                    "type": "string"
                },
                "incrementalIndexingStartDate": {
                    "type": "string"
                },
                "indexOnlyTextAndPKFields": {
                    "type": "boolean"
                },
                "maxIterations": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxNumResultsPerView": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderByExpression": {
                    "type": "string"
                },
                "sourcesNotChange": {
                    "type": "boolean"
                },
                "view": {
                    "type": "string"
                },
                "viewIndexingProcessName": {
                    "type": "string"
                },
                "viewName": {
                    "type": "string"
                }
            },
            "title": "ViewIndexingProcessRes"
        },
        "ViewInfo": {
            "type": "object",
            "properties": {
                "fieldNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "loadQuery": {
                    "type": "string"
                },
                "mandatoryFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pkFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "ViewInfo"
        }
    }
}